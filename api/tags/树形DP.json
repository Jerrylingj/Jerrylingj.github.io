{"name":"树形DP","slug":"树形DP","count":1,"postlist":[{"title":"动态规划--树形DP","uid":"255c74842319a79aad2f8bcbbeafd0ea","slug":"动态规划-树形DP","date":"2024-10-06T15:58:28.000Z","updated":"2024-10-27T13:39:37.265Z","comments":true,"path":"api/articles/动态规划-树形DP.json","cover":"https://img.zcool.cn/community/01e3fd6034d23911013ef90fd4daa6.jpg@2o.jpg","text":"树形DP1.引入特点： 利用树的递归结构，通过dfs遍历定义和计算状态。 每个节点的状态通常表示以该节点为根的子树的最优解 考法：树的直径或最长路径 找到树任意...","permalink":"/post/动态规划-树形DP","photos":[],"count_time":{"symbolsCount":"6.3k","symbolsTime":"6 mins."},"categories":[{"name":"算法","slug":"算法","count":23,"path":"api/categories/算法.json"}],"tags":[{"name":"动态规划","slug":"动态规划","count":5,"path":"api/tags/动态规划.json"},{"name":"树形DP","slug":"树形DP","count":1,"path":"api/tags/树形DP.json"}],"author":{"name":"Jerry","slug":"blog-author","avatar":"https://th.bing.com/th/id/R.7a1adf834060c41d2d476af2a5e322fd?rik=N35%2fqYx%2fr4RSog&riu=http%3a%2f%2fimg.keaiming.com%2fuploads%2fallimg%2f2020090111%2fsvaseyx4m3v.jpg&ehk=EBywhQ9emNaCt5dbn%2b%2fxbUc5yK42H8b%2ffRDsZKdVI6I%3d&risl=&pid=ImgRaw&r=0","link":"/","description":"<strong>Keep a single spark to start a prairie fire.</strong>","socials":{"github":"https://github.com/Jerrylingj","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/2301_79143568?spm=1010.2135.3001.5343","juejin":"","customs":{}}},"feature":true}]}