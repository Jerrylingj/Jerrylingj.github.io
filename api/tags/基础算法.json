{"name":"基础算法","slug":"基础算法","count":4,"postlist":[{"title":"离散化","uid":"7f00768b865696d227f7b794a43f7717","slug":"离散化","date":"2024-10-06T16:01:43.000Z","updated":"2024-10-15T08:04:37.947Z","comments":true,"path":"api/articles/离散化.json","cover":"https://pic4.zhimg.com/v2-c326fcfdd903de8535927295f821224c_r.jpg","text":"引入简单来说，离散化就是一种映射 想象这样一个场景，假如你需要对数轴上范围为 的数进行操作，但是只需要操作 个数 开 的数组太浪费，开 的数组不够用，离散化正是...","permalink":"/post/离散化","photos":[],"count_time":{"symbolsCount":"2.6k","symbolsTime":"2 mins."},"categories":[{"name":"算法","slug":"算法","count":17,"path":"api/categories/算法.json"}],"tags":[{"name":"基础算法","slug":"基础算法","count":4,"path":"api/tags/基础算法.json"},{"name":"离散化","slug":"离散化","count":1,"path":"api/tags/离散化.json"}],"author":{"name":"Jerry","slug":"blog-author","avatar":"https://th.bing.com/th/id/R.7a1adf834060c41d2d476af2a5e322fd?rik=N35%2fqYx%2fr4RSog&riu=http%3a%2f%2fimg.keaiming.com%2fuploads%2fallimg%2f2020090111%2fsvaseyx4m3v.jpg&ehk=EBywhQ9emNaCt5dbn%2b%2fxbUc5yK42H8b%2ffRDsZKdVI6I%3d&risl=&pid=ImgRaw&r=0","link":"/","description":"<strong>Keep a single spark to start a prairie fire.</strong>","socials":{"github":"https://github.com/Jerrylingj","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/2301_79143568?spm=1010.2135.3001.5343","juejin":"","customs":{}}}},{"title":"前缀和与差分","uid":"f65c2271ed43cdf14e2eea3c0c440d44","slug":"前缀和与差分","date":"2024-10-06T16:01:42.000Z","updated":"2024-10-15T06:55:59.214Z","comments":true,"path":"api/articles/前缀和与差分.json","cover":"https://th.bing.com/th/id/R.f4f614c0aeb045d2f427ea094ab82796?rik=8uZrt4cHUNihww&riu=http%3a%2f%2fwww.acgtubao.com%2fwp-content%2fuploads%2f2019%2f01%2f70022367_p0.jpg&ehk=wdBmbm30m8tZJvr4tiSCsdVCldjX0gYOIYiMUPOYxQY%3d&risl=&pid=ImgRaw&r=0","text":"引入定义数组 为 的前缀和数组， 为 的差分数组， 前缀和与差分为一对互逆关系，类似高中时的数列通项 和前n项和 死去的记忆立马复活，这样一类比就清晰了许多吧~...","permalink":"/post/前缀和与差分","photos":[],"count_time":{"symbolsCount":709,"symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":17,"path":"api/categories/算法.json"}],"tags":[{"name":"基础算法","slug":"基础算法","count":4,"path":"api/tags/基础算法.json"},{"name":"前缀和","slug":"前缀和","count":2,"path":"api/tags/前缀和.json"},{"name":"差分","slug":"差分","count":1,"path":"api/tags/差分.json"}],"author":{"name":"Jerry","slug":"blog-author","avatar":"https://th.bing.com/th/id/R.7a1adf834060c41d2d476af2a5e322fd?rik=N35%2fqYx%2fr4RSog&riu=http%3a%2f%2fimg.keaiming.com%2fuploads%2fallimg%2f2020090111%2fsvaseyx4m3v.jpg&ehk=EBywhQ9emNaCt5dbn%2b%2fxbUc5yK42H8b%2ffRDsZKdVI6I%3d&risl=&pid=ImgRaw&r=0","link":"/","description":"<strong>Keep a single spark to start a prairie fire.</strong>","socials":{"github":"https://github.com/Jerrylingj","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/2301_79143568?spm=1010.2135.3001.5343","juejin":"","customs":{}}}},{"title":"二分","uid":"8038215b5c2b5aa82664c7d7c50d2cdc","slug":"二分","date":"2024-09-26T02:50:13.000Z","updated":"2024-10-01T09:54:24.945Z","comments":true,"path":"api/articles/二分.json","cover":"https://n.sinaimg.cn/sinacn10112/181/w1550h1031/20191218/3315-ikvenft9359266.jpg","text":"二分 注意 ❗❗❗❗二分查找的前提是被查找的数据必须有二段性 如何理解这句话呢？ 举个例子，在数组[1, 5 , 8, 9, 23, 25, 40]里找9 我可...","permalink":"/post/二分","photos":[],"count_time":{"symbolsCount":"5.1k","symbolsTime":"5 mins."},"categories":[{"name":"算法","slug":"算法","count":17,"path":"api/categories/算法.json"}],"tags":[{"name":"基础算法","slug":"基础算法","count":4,"path":"api/tags/基础算法.json"},{"name":"二分","slug":"二分","count":1,"path":"api/tags/二分.json"}],"author":{"name":"Jerry","slug":"blog-author","avatar":"https://th.bing.com/th/id/R.7a1adf834060c41d2d476af2a5e322fd?rik=N35%2fqYx%2fr4RSog&riu=http%3a%2f%2fimg.keaiming.com%2fuploads%2fallimg%2f2020090111%2fsvaseyx4m3v.jpg&ehk=EBywhQ9emNaCt5dbn%2b%2fxbUc5yK42H8b%2ffRDsZKdVI6I%3d&risl=&pid=ImgRaw&r=0","link":"/","description":"<strong>Keep a single spark to start a prairie fire.</strong>","socials":{"github":"https://github.com/Jerrylingj","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/2301_79143568?spm=1010.2135.3001.5343","juejin":"","customs":{}}}},{"title":"排序","uid":"2a1893ca085cc0c5b7d1cdcd8c0b1c91","slug":"排序","date":"2024-09-26T02:05:17.000Z","updated":"2024-10-01T09:56:34.924Z","comments":true,"path":"api/articles/排序.json","cover":"https://th.bing.com/th/id/R.ec013c54a665bb6b38fb0390e2987b80?rik=3OfrTtHdScARiQ&riu=http%3a%2f%2fqqpublic.qpic.cn%2fqq_public%2f0%2f0-595029769-EC013C54A665BB6B38FB0390E2987B80%2f0%3ffmt%3djpg%26size%3d101%26h%3d506%26w%3d900%26ppv%3d1.jpg&ehk=YrecwkKXnI1%2b2ARpQFDbvv%2bjFB66bRmEzr9q134unNk%3d&risl=&pid=ImgRaw&r=0","text":"1.快速排序对数组 q 在下标 l 到 r 的范围内进行升序排序。 快速排序通过多次的比较和交换，在一趟排序之中确定好选择的基准应该在的位置。这个位置满足的条件...","permalink":"/post/排序","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"算法","slug":"算法","count":17,"path":"api/categories/算法.json"}],"tags":[{"name":"基础算法","slug":"基础算法","count":4,"path":"api/tags/基础算法.json"},{"name":"快速排序","slug":"快速排序","count":1,"path":"api/tags/快速排序.json"},{"name":"归并排序","slug":"归并排序","count":1,"path":"api/tags/归并排序.json"}],"author":{"name":"Jerry","slug":"blog-author","avatar":"https://th.bing.com/th/id/R.7a1adf834060c41d2d476af2a5e322fd?rik=N35%2fqYx%2fr4RSog&riu=http%3a%2f%2fimg.keaiming.com%2fuploads%2fallimg%2f2020090111%2fsvaseyx4m3v.jpg&ehk=EBywhQ9emNaCt5dbn%2b%2fxbUc5yK42H8b%2ffRDsZKdVI6I%3d&risl=&pid=ImgRaw&r=0","link":"/","description":"<strong>Keep a single spark to start a prairie fire.</strong>","socials":{"github":"https://github.com/Jerrylingj","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/2301_79143568?spm=1010.2135.3001.5343","juejin":"","customs":{}}}}]}