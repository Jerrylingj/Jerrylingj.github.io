{"title":"html+css+js笔记","uid":"52118211d89fd171196f274fe2d94d19","slug":"html-css-js","date":"2024-09-30T09:19:16.000Z","updated":"2024-10-08T02:21:35.178Z","comments":true,"path":"api/articles/html-css-js.json","cover":"https://chichi-pui.imgix.net/uploads/post_images/7ff7baa3-161e-46ef-9415-874ca7145907/81eb59e2-4c09-4d33-9a65-5dbf69bf4d4c_1200x.jpeg?auto=format&lossless=0","content":"<h2 id=\"1-html\"><a href=\"#1-html\" class=\"headerlink\" title=\"1.html\"></a>1.html</h2><h3 id=\"1-1-文件结构\"><a href=\"#1-1-文件结构\" class=\"headerlink\" title=\"1.1 文件结构\"></a>1.1 文件结构</h3><p>html 文件以树的形式组织</p>\n<h3 id=\"1-2-基本标签\"><a href=\"#1-2-基本标签\" class=\"headerlink\" title=\"1.2 基本标签\"></a>1.2 基本标签</h3><ul>\n<li><p><strong><code>&lt;html&gt;</code>:</strong> 根节点</p>\n</li>\n<li><p><strong><code>&lt;head&gt;</code>:</strong> 规定文档相关的配置信息：<strong>标题、引用的文档样式、脚本</strong></p>\n</li>\n<li><p>设置 icon:</p>\n</li>\n</ul>\n<img src=\"./html-css-js/ed053bc2-a84b-46c6-93df-4a95bd291517.png\" alt=\"ed053bc2-a84b-46c6-93df-4a95bd291517\" style=\"margin: auto;\">\n\n<img src=\"./html-css-js/1280X1280 (3).PNG\" alt=\"1280X1280 (3)\" style=\"margin: auto;\">\n\n<ul>\n<li><p><strong><code>&lt;body&gt;</code>:</strong> 表示文档的内容，<code>document.body</code> 树形可以访问 body 元素脚本</p>\n</li>\n<li><p><strong><code>&lt;title&gt;</code>:</strong> 定义文档标题，显示在浏览器标题栏上，<strong>只能包含文本</strong>，包含的任何标签的会被忽略</p>\n<img src=\"./html-css-js/微信图片_20231122210315 (1).png\" alt=\"微信图片_20231122210315 (1)\" style=\"margin: auto;\">\n\n<img src=\"./html-css-js/1280X1280.PNG\" alt=\"1280X1280\" style=\"margin: auto;\">\n</li>\n<li><p><strong><code>&lt;meta&gt;</code>:</strong> 剩余的均用 <code>&lt;meta&gt;</code> 标签表示</p>\n<p>常见属性：</p>\n<ul>\n<li><code>charset</code></li>\n<li><code>name</code></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"1-3-注释\"><a href=\"#1-3-注释\" class=\"headerlink\" title=\"1.3 注释\"></a>1.3 注释</h3><p>格式如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\"> this is a 注释</span></span><br><span class=\"line\"><span class=\"comment\">--&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"1-4-文本标签\"><a href=\"#1-4-文本标签\" class=\"headerlink\" title=\"1.4 文本标签\"></a>1.4 文本标签</h3><p>绝大部分标签本质都是一样的，只不过有些标签是根据大多数用户的需求进行了标准化</p>\n<ul>\n<li><strong><code>&lt;div&gt;</code>:</strong> 通用型流行内容容器，块状元素</li>\n<li><strong><code>&lt;span&gt;</code>:</strong> 行内元素</li>\n</ul>\n<p><strong>比较：</strong></p>\n<img src=\"./html-css-js/1280X1280 (1).PNG\" alt=\"1280X1280 (1)\" style=\"margin: auto;\">\n\n<p><strong><code>&lt;div&gt;</code>自带前后回车</strong><br><strong><code>&lt;span&gt;</code>不带回车</strong></p>\n<ul>\n<li><p><strong><code>&lt;h1&gt;</code> ~ <code>&lt;h6&gt;</code>:</strong> 六级标题</p>\n</li>\n<li><p><strong><code>&lt;p&gt;</code>:</strong> 文本的一段，块级元素，自带回车</p>\n<p>其实就是加了前后行间距，<strong>自动过滤空格和回车</strong></p>\n<img src=\"./html-css-js/63fc8889-2823-4d13-8994-d5e5d81449ee.png\" alt=\"63fc8889-2823-4d13-8994-d5e5d81449ee\" style=\"margin: auto;\">\n\n<img src=\"./html-css-js/48a04943-5898-4def-a089-6816284c3d0c.png\" alt=\"48a04943-5898-4def-a089-6816284c3d0c\" style=\"margin: auto;\">\n</li>\n<li><p>**<code>&lt;pre&gt;</code>**：预定义格式文本，不会过滤换行和空格</p>\n<ul>\n<li><code>&gt;</code>用<code>&amp;gt</code></li>\n<li><code>&lt;</code>用<code>&amp;lt</code></li>\n<li>空格用<code>nbsp</code></li>\n</ul>\n</li>\n<li><p>**<code>&lt;br&gt;</code>**：在文本生成一个换行，在写诗和写地址的时候有用</p>\n</li>\n<li><p><strong><code>&lt;hr&gt;</code></strong> ：表示段落及元素之间主题转换（一个故事中场景的改变或一个章节主题的改变）<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.262ex\" height=\"1.181ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -511 1000 522\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g></g></g></svg></mjx-container> 在可视化浏览器表现为水平线</p>\n</li>\n<li><p><strong><code>&lt;i&gt;</code></strong> ：区分普通文本的一系列文本，一般为<strong>斜体</strong></p>\n</li>\n<li><p><strong><code>&lt;b&gt;</code></strong> ：加粗，替代方案是用 CSS font-weight 来创建粗体文字</p>\n</li>\n<li><p>**<code>&lt;del&gt;</code>**： 表示一些被从文档中删除的文字内容，一般用于显示修改记录或者源代码差异的情况</p>\n</li>\n<li><p>**<code>&lt;ins&gt;</code>**： 与 del 相反，表示加入的内容</p>\n</li>\n</ul>\n<h3 id=\"1-5-图片\"><a href=\"#1-5-图片\" class=\"headerlink\" title=\"1.5 图片\"></a>1.5 图片</h3><ul>\n<li><p><code>src</code>：路径/地址</p>\n</li>\n<li><p><code>alt</code>：对文本表述，非强制性，当图片无法正常显示时展示</p>\n<img src=\"./html-css-js/6e10b2f4-1b39-423e-9c91-092b500952ca.png\" alt=\"6e10b2f4-1b39-423e-9c91-092b500952ca\" style=\"margin: auto;\">\n</li>\n<li><p><code>height</code>：高度，单位是 CSS 像素</p>\n</li>\n<li><p><code>width</code>：宽度，单位是 CSS 像素</p>\n</li>\n</ul>\n<h3 id=\"1-6-音频与视频\"><a href=\"#1-6-音频与视频\" class=\"headerlink\" title=\"1.6 音频与视频\"></a>1.6 音频与视频</h3><ul>\n<li><code>&lt;audio&gt;</code>：嵌入音频，src 表示地址</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--自动播放--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">audio</span> <span class=\"attr\">src</span>=<span class=\"string\">\"/audios/林俊杰 - 愿与愁.mp3\"</span> <span class=\"attr\">autoplay</span>&gt;</span>\"/audios/愿与愁.mp3\"无法播放<span class=\"tag\">&lt;/<span class=\"name\">audio</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!--手动播放--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">audio</span> <span class=\"attr\">controls</span> <span class=\"attr\">src</span>=<span class=\"string\">\"/audios/林俊杰 - 愿与愁.mp3\"</span>&gt;</span>\"/audios/愿与愁.mp3\"无法播放<span class=\"tag\">&lt;/<span class=\"name\">audio</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!--一次存多个音源，前面不行就放后面的--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">audio</span> <span class=\"attr\">controls</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">source</span> <span class=\"attr\">src</span>=<span class=\"string\">\"/audios/林俊杰 - 愿与愁.mp3\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"audio/mpeg\"</span>&gt;</span>\"/audios/愿与愁.mp3\"无法播放<span class=\"tag\">&lt;/<span class=\"name\">source</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">source</span> <span class=\"attr\">src</span>=<span class=\"string\">\"/audios/郭采洁 - 你在不在.mp3\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"audio/mpeg\"</span>&gt;</span>\"/audios/你在不在.mp3\"无法播放<span class=\"tag\">&lt;/<span class=\"name\">source</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">audio</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n\n<ul>\n<li><code>&lt;video&gt;</code>：嵌入视频，src 表示地址</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--自动播放--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">video</span> <span class=\"attr\">src</span>=<span class=\"string\">\"/videos/video1.mp4\"</span> <span class=\"attr\">autoplay</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">video</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!--手动播放--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">video</span> <span class=\"attr\">controls</span> <span class=\"attr\">src</span>=<span class=\"string\">\"/videos/video1.mp4\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">video</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!--一次存好几个视频--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">video</span> <span class=\"attr\">controls</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">source</span> <span class=\"attr\">src</span>=<span class=\"string\">\"/videos/video1.mp4\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"video/mp4\"</span>&gt;</span>\"/videos/video1.mp4\"无法播放<span class=\"tag\">&lt;/<span class=\"name\">source</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">source</span> <span class=\"attr\">src</span>=<span class=\"string\">\"/videos/video2.mp4\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"video/mp4\"</span>&gt;</span>\"/videos/video2.mp4\"无法播放<span class=\"tag\">&lt;/<span class=\"name\">source</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">video</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<img src=\"./html-css-js/4815f2e8-b58b-4434-abd5-224072d892f0.png\" alt=\"4815f2e8-b58b-4434-abd5-224072d892f0\" style=\"margin: auto;\">\n\n\n\n<h3 id=\"1-7-超链接\"><a href=\"#1-7-超链接\" class=\"headerlink\" title=\"1.7 超链接\"></a>1.7 超链接</h3><p><code>&lt;a&gt;&lt;/a&gt;</code></p>\n<p>格式：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--href+地址,标签中间放显示内容--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"https://www.baidu.com\"</span>&gt;</span>百度<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!--相对路径--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"/about.html\"</span>&gt;</span>About<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!--内嵌其他标签--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--内嵌图片，则整个图片就是一个超链接--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--target的作用是新开一个页面，没有target的话就是在原界面跳转--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\\about.html\"</span> <span class=\"attr\">target</span>=<span class=\"string\">\"_blank\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">height</span>=<span class=\"string\">\"800\"</span> <span class=\"attr\">width</span>=<span class=\"string\">\"1650\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"/images/picture2.jpg\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"about\"</span>&gt;</span></span><br><span class=\"line\">        关于</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<img src=\"./html-css-js/4815f2e8-b58b-4434-abd5-224072d892f0.png\" alt=\"4815f2e8-b58b-4434-abd5-224072d892f0\" style=\"margin: auto;\">\n\n<p><img src=\"./html-css-js/f81b51e3-d587-4b54-ba94-1585263ef52c.png\" alt=\"f81b51e3-d587-4b54-ba94-1585263ef52c\" style=\"margin: auto;\"><img src=\"./html-css-js/4fa7eb6a-c4a1-45c4-947a-c8831e2c00ab.png\" alt=\"4fa7eb6a-c4a1-45c4-947a-c8831e2c00ab\" style=\"margin: auto;\"></p>\n<h3 id=\"1-8-表单\"><a href=\"#1-8-表单\" class=\"headerlink\" title=\"1.8 表单\"></a>1.8 表单</h3><ul>\n<li><strong><code>&lt;input&gt;</code></strong><ul>\n<li><code>type=\"text\"</code>：基础的单行文字</li>\n<li><code>type=\"number\"</code>：只能是数字</li>\n<li><code>type=\"email\"</code>：合法的邮箱地址</li>\n<li><code>type=\"password\"</code>：密码</li>\n<li><code>type=\"radio\"</code>：选择，同样 name 的 radio 只能选一个，要多选就得每个都命不同的名字</li>\n</ul>\n</li>\n</ul>\n<img src=\"./html-css-js/76c39923-491c-47c1-bec8-287c578874cc.png\" alt=\"76c39923-491c-47c1-bec8-287c578874cc\" style=\"margin: auto;\">\n\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--表头--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"username\"</span>&gt;</span>用户名<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--把输入数据绑定进来--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"username\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"username\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--加一个按钮--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span>&gt;</span>提交<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<img src=\"./html-css-js/f5109cf5-6312-42bc-9fac-5372fcf6bcbf.png\" alt=\"f5109cf5-6312-42bc-9fac-5372fcf6bcbf\" style=\"margin: auto;\">\n\n<img src=\"./html-css-js/f4ac4d28-4a97-4f44-ae70-adf1d017e40c.png\" style=\"margin: auto;\">\n\n<p><strong>+action=””实现超链接功能</strong> <mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.262ex\" height=\"1.181ex\" role=\"img\" focusable=\"false\" viewBox=\"0 -511 1000 522\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mo\"><path data-c=\"2192\" d=\"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z\"></path></g></g></g></svg></mjx-container> 获取数据并跳转到下一个网页</p>\n<ul>\n<li><p>常见属性：</p>\n<ul>\n<li><code>name</code>：名称</li>\n<li><code>id</code>：唯一 id</li>\n<li><code>maxlength</code>：最大长度</li>\n<li><code>minlength</code>：最小长度</li>\n<li><code>required</code>：是否必填</li>\n<li><code>placeholder</code>：背景填充</li>\n</ul>\n</li>\n<li><p>**<code>&lt;textarea&gt;</code>**：多行的框框，一个块区域</p>\n</li>\n</ul>\n<img src=\"./html-css-js/f4ac4d28-4a97-4f44-ae70-adf1d017e40c.png\" alt=\"f4ac4d28-4a97-4f44-ae70-adf1d017e40c\" style=\"margin: auto;\">\n\n<ul>\n<li><code>&lt;select&gt;</code>+<code>&lt;option&gt;</code>：选择框+选项</li>\n</ul>\n<img src=\"./html-css-js/5c1e74fb-bff0-48c1-8177-dcda78db2121.png\" alt=\"5c1e74fb-bff0-48c1-8177-dcda78db2121\" style=\"margin: auto;\">\n\n<p><strong>默认选项： selected value</strong></p>\n<h3 id=\"1-9-列表\"><a href=\"#1-9-列表\" class=\"headerlink\" title=\"1.9 列表\"></a>1.9 列表</h3><p><code>&lt;ul&gt;&lt;li&gt;</code>无序</p>\n<p><code>&lt;ol&gt;&lt;li&gt;</code>有序</p>\n<h3 id=\"1-10-表格\"><a href=\"#1-10-表格\" class=\"headerlink\" title=\"1.10 表格\"></a>1.10 表格</h3><img src=\"./html-css-js/340ed7bd-137d-4ddc-ba1e-4ab5be3e29d9.png\" alt=\"340ed7bd-137d-4ddc-ba1e-4ab5be3e29d9\" style=\"margin: auto;\">\n\n\n\n<h3 id=\"1-11-语义标签\"><a href=\"#1-11-语义标签\" class=\"headerlink\" title=\"1.11 语义标签\"></a>1.11 语义标签</h3><img src=\"./html-css-js/02d0b6c5-24b4-4de3-8b79-2af6b0c27f8e.png\" alt=\"02d0b6c5-24b4-4de3-8b79-2af6b0c27f8e\" style=\"margin: auto;\">\n\n\n\n<h3 id=\"1-12-特殊符号\"><a href=\"#1-12-特殊符号\" class=\"headerlink\" title=\"1.12 特殊符号\"></a>1.12 特殊符号</h3><img src=\"./html-css-js/2e3b2464-2988-4ca0-a3ce-3dac2baaeab6.png\" style=\"margin: auto;\">\n\n\n<h2 id=\"2-CSS\"><a href=\"#2-CSS\" class=\"headerlink\" title=\"2.CSS\"></a>2.CSS</h2><p><strong>理解 <code>html</code> 与 <code>css</code>：</strong></p>\n<p><code>html</code> 是素颜，<code>css</code> 是化妆</p>\n<p>一个是底层，一个是装饰</p>\n<h3 id=\"2-1-样式定义方式\"><a href=\"#2-1-样式定义方式\" class=\"headerlink\" title=\"2.1 样式定义方式\"></a>2.1 样式定义方式</h3><ul>\n<li><strong>行内样式表：只对当前标签作用</strong></li>\n</ul>\n<p>加多一个 style 属性，里面存储所有样式</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--设置宽度--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--html--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">width</span>=<span class=\"string\">\"300\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--css--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">style</span>=<span class=\"string\">\"width: 300px;\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!--一些例子--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">\"width: 100%;height: 100%;background-color: black;\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><strong>内部样式表：对同个页面多个元素产生影响</strong></li>\n</ul>\n<p>单独写一个 style 标签，对某些标签的样式专门定义一个类</p>\n<p><img src=\"./html-css-js/54aa586f-0fff-442f-85d6-216ba708448c.png\" alt=\"54aa586f-0fff-442f-85d6-216ba708448c\" style=\"margin: auto;\"><img src=\"./html-css-js/29f6de4c-7ed5-4f20-bbb9-794c79756816.png\" alt=\"29f6de4c-7ed5-4f20-bbb9-794c79756816\" style=\"margin: auto;\"></p>\n<p>对于同一种标签，用 <strong><code>class</code></strong> 来区别不同种样式，**<code>class</code> 可以叠加**</p>\n<img src=\"./html-css-js/b2c99fcf-ff53-42e0-b93e-2bd7db8a642d.png\" alt=\"b2c99fcf-ff53-42e0-b93e-2bd7db8a642d\" style=\"margin: auto;\">\n\n<img src=\"./html-css-js/67814ad4-dd74-4147-8790-50818c311b78.png\" alt=\"67814ad4-dd74-4147-8790-50818c311b78\" style=\"margin: auto;\">\n\n<ul>\n<li>外部样式表</li>\n</ul>\n<p>在一般的网站制作过程，有很多样式不可能在一个界面完成设计，需要写在额外的文件中，这时候在<code>&lt;head&gt;</code>标签底下就要用<code>&lt;link&gt;</code>方式引入进来以使用样式</p>\n<img src=\"./html-css-js/ed053bc2-a84b-46c6-93df-4a95bd291517.png\" alt=\"ed053bc2-a84b-46c6-93df-4a95bd291517\" style=\"margin: auto;\">\n\n<p><strong>注：style 里面的注释只能用/* */</strong></p>\n<h3 id=\"2-2-选择器\"><a href=\"#2-2-选择器\" class=\"headerlink\" title=\"2.2 选择器\"></a>2.2 选择器</h3><ul>\n<li><strong>标签选择器</strong></li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--选择所有div标签--&gt;</span></span><br><span class=\"line\">div {</span><br><span class=\"line\">    width: 200px;</span><br><span class=\"line\">    height: 200px;</span><br><span class=\"line\">    backfground-color: gray;</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n\n\n\n<ul>\n<li><strong>ID 选择器</strong></li>\n</ul>\n<p>对 id 属性选择</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--选择ID为rect-1的标签--&gt;</span></span><br><span class=\"line\">#rect-1 {</span><br><span class=\"line\">    width: 200px;</span><br><span class=\"line\">    height: 200px;</span><br><span class=\"line\">    background-color: red;</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n\n\n\n<ul>\n<li><strong>类选择器</strong></li>\n</ul>\n<p>对 class 属性选择</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--选择所有rectangle类的标签--&gt;</span></span><br><span class=\"line\">.rectangle {</span><br><span class=\"line\">    width: 200px;</span><br><span class=\"line\">    height: 200px;</span><br><span class=\"line\">    background-color: green;</span><br><span class=\"line\"> }</span><br></pre></td></tr></table></figure>\n\n\n\n<ul>\n<li><strong>伪类选择器</strong></li>\n</ul>\n<p>就是一个<strong>后缀</strong>，在前面几类的基础上加上一些特殊情况</p>\n<p>→如当鼠标悬停在这时、长按时……</p>\n<img src=\"./html-css-js/09d25b8e-d030-410a-97e6-3793a0d6e562.png\" alt=\"09d25b8e-d030-410a-97e6-3793a0d6e562\" style=\"margin: auto;\">\n\n\n\n<ul>\n<li><strong>复合选择器</strong></li>\n</ul>\n<img src=\"./html-css-js/18166896-a932-4fc4-a32b-5b27e2d82361.png\" alt=\"18166896-a932-4fc4-a32b-5b27e2d82361\" style=\"margin: auto;\">\n\n\n\n<ul>\n<li><strong>通配符选择器</strong></li>\n</ul>\n<img src=\"./html-css-js/3e36c71b-e7a7-4a0b-aa20-f7dc1fce86b7.png\" alt=\"3e36c71b-e7a7-4a0b-aa20-f7dc1fce86b7\" style=\"margin: auto;\">\n\n\n\n<ul>\n<li><strong>伪元素选择器</strong></li>\n</ul>\n<img src=\"./html-css-js/eb114cf8-05d3-4d9a-89b0-2448802956d9.png\" alt=\"eb114cf8-05d3-4d9a-89b0-2448802956d9\" style=\"margin: auto;\">\n\n\n\n<h3 id=\"2-3-颜色\"><a href=\"#2-3-颜色\" class=\"headerlink\" title=\"2.3 颜色\"></a>2.3 颜色</h3><img src=\"./html-css-js/101a12e2-d407-413e-8aba-b3919a54db6f.png\" alt=\"101a12e2-d407-413e-8aba-b3919a54db6f\" style=\"margin: auto;\">\n\n\n\n<h3 id=\"2-4-文本\"><a href=\"#2-4-文本\" class=\"headerlink\" title=\"2.4 文本\"></a>2.4 文本</h3><ul>\n<li><p>**<code>text-align</code>**：<code>center</code>,<code>left</code>,<code>right</code>,<code>justify</code> </p>\n<ul>\n<li><p>定义行内元素（如文字）如何相对其块状父元素对齐，<code>text-align</code> 不控制块元素自己对齐，只控制他的行内内容的对齐</p>\n</li>\n<li><p>子标签继承父标签的对齐方式</p>\n</li>\n</ul>\n</li>\n<li><p>**<code>line-height</code>**：设置多行元素的空间量，如多行文本的间距，对于块级元素，指定元素行盒（line boxes）的最小高度，对于非替代的 inline 元素，它用于计算行盒（line box）的高度</p>\n<ul>\n<li>补充：长度单位</li>\n</ul>\n</li>\n</ul>\n<img src=\"./html-css-js/cfa18e86-b8c7-4b4f-bb53-f87388960d3b.png\" alt=\"cfa18e86-b8c7-4b4f-bb53-f87388960d3b\" style=\"margin: auto;\">\n\n<ul>\n<li><p>tips：通过设置行高可以<strong>竖直居中</strong></p>\n</li>\n<li><p>**<code>letter-space</code>**：文本字符的间距</p>\n</li>\n</ul>\n<img src=\"./html-css-js/395f8749-0df8-4882-8ecf-7e93696e92a6.png\" alt=\"395f8749-0df8-4882-8ecf-7e93696e92a6\" style=\"margin: auto;\">\n\n<ul>\n<li>**<code>text-indent</code>**：块元素首行文本内容之前的缩进量</li>\n</ul>\n<img src=\"./html-css-js/39714830-0cd8-45ee-b95d-9e6286cd7d59.png\" alt=\"39714830-0cd8-45ee-b95d-9e6286cd7d59\" style=\"margin: auto;\">\n\n<ul>\n<li><strong><code>text-decoration</code>：</strong>设置修饰线外观→在 MDN 上直接搜用法就行<ul>\n<li><code>text-decoration-line</code></li>\n<li><code>text-decoration-style</code></li>\n<li><code>text-decoration-thickness</code></li>\n</ul>\n</li>\n</ul>\n<p>删除一条链接的任何修饰：</p>\n<img src=\"./html-css-js/2f3b2aa5-4307-4910-97ee-ae160447113c.png\" alt=\"2f3b2aa5-4307-4910-97ee-ae160447113c\" style=\"margin: auto;\">\n\n\n\n<ul>\n<li><p><strong>text-shadow：</strong>为文字添加阴影</p>\n<ul>\n<li><p>4 个参数：坐标（2）+阴影模糊半径+颜色</p>\n</li>\n<li><p>模糊半径越大字体模糊</p>\n</li>\n<li><p>坐标方向：</p>\n</li>\n</ul>\n</li>\n</ul>\n<img src=\"./html-css-js/500e6b11-80c0-4e2f-822f-91ec35345a02.png\" alt=\"500e6b11-80c0-4e2f-822f-91ec35345a02\" style=\"margin: auto;\">\n\n<img src=\"./html-css-js/9e019636-56de-4065-832a-b8ca2a121c0f.png\" alt=\"9e019636-56de-4065-832a-b8ca2a121c0f\" style=\"margin: auto;\">\n\n\n\n<h3 id=\"2-5-字体\"><a href=\"#2-5-字体\" class=\"headerlink\" title=\"2.5 字体\"></a>2.5 字体</h3><ul>\n<li><strong><code>font-size</code>：</strong>设置字体大小</li>\n<li><strong><code>font-weight</code>：</strong>设置字体粗细程度</li>\n</ul>\n<p><img src=\"/./html-css-js/6acd9871-f25e-476a-92e6-2c7f1bc591fa.png\" alt=\"6acd9871-f25e-476a-92e6-2c7f1bc591fa\"></p>\n<ul>\n<li><p><strong><code>font-family</code>：</strong>设置字体类型（楷体、黑体、宋体……）</p>\n</li>\n<li><p>通过一个有先后顺序的，由字体名或者字体族名组成的列表来为选定的元素设置字体，属性之间用逗号隔开，浏览器会选择列表中第一个该计算机上有安装的字体，或者是通过@font-face 指定的可以直接下载的字体</p>\n<ul>\n<li><p><code>\tserif</code>→带衬线字体      <code>sans-serif</code>→不带衬线字体</p>\n</li>\n<li><p><code>monospace</code>→等宽字体</p>\n</li>\n<li><p><code>cursive</code>→草书字体</p>\n</li>\n<li><p><code>fantasy</code>→艺术字体</p>\n</li>\n</ul>\n</li>\n<li><p><strong>font-style：</strong>选择 <code>font-family</code> 底下的 <code>italic</code> 或 <code>oblique</code> 样式</p>\n</li>\n</ul>\n<img src=\"./html-css-js/85d92460-41fd-4825-b74e-1d16ffc50479.png\" alt=\"85d92460-41fd-4825-b74e-1d16ffc50479\" style=\"margin: auto;\">\n\n<h3 id=\"2-6-背景\"><a href=\"#2-6-背景\" class=\"headerlink\" title=\"2.6 背景\"></a>2.6 背景</h3><ul>\n<li><p><strong><code>background-color</code>：</strong>设置背景颜色，置于最底层</p>\n</li>\n<li><p><strong><code>background-image</code>：</strong>设置背景图像</p>\n<ul>\n<li><p>渐变色 <code>linear-gradient（rgba（0， 0， 255， 0.5）， rgba（255， 255， 0， 0.5））</code></p>\n</li>\n<li><p>多个图：中间用逗号隔开，越靠前的优先级越高</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">background-image</span>: <span class=\"built_in\">url</span>(<span class=\"string\">'./images/p1.ipg),url('</span><span class=\"string\">./images/p2.jpg'</span>);</span><br><span class=\"line\"><span class=\"comment\">/* p1优先级高于p2 */</span></span><br><span class=\"line\">backgrount-size: <span class=\"number\">100px</span> <span class=\"number\">200px</span>, <span class=\"number\">200px</span> <span class=\"number\">100px</span>;</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p><strong><code>background-size</code>：</strong>设置背景图片大小</p>\n<ul>\n<li>50% 50% 横纵比例</li>\n<li>200px 300px 大小</li>\n</ul>\n</li>\n<li><p><strong><code>background-repeat</code>：</strong>设置背景图像沿水平轴、竖直轴，两个轴重复，或者根本不重复</p>\n</li>\n<li><p><strong><code>background-position</code>：</strong>设置背景图片初始位置</p>\n<ul>\n<li>center     …px</li>\n</ul>\n</li>\n<li><p><strong><code>background-attachment</code>：</strong>设置背景图像的位置实在视口内固定或者随着区块滚动</p>\n</li>\n</ul>\n<h3 id=\"2-7-边框\"><a href=\"#2-7-边框\" class=\"headerlink\" title=\"2.7 边框\"></a>2.7 边框</h3><p>可以四条边<strong>独立</strong>设置样式</p>\n<ul>\n<li><strong><code>border-style</code>：</strong>CSS 简写属性，用来设定元素所有边框的样式</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* Apply to all four sides */</span></span><br><span class=\"line\"><span class=\"attribute\">border-style</span>: dashed;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* horizontal | vertical */</span></span><br><span class=\"line\"><span class=\"attribute\">border-style</span>: dotted solid;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* top | horizontal | bottom */</span></span><br><span class=\"line\"><span class=\"attribute\">border-style</span>: hidden double dashed;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* top | right | bottom | left */</span></span><br><span class=\"line\"><span class=\"attribute\">border-style</span>: none solid dotted dashed;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* Global values */</span></span><br><span class=\"line\"><span class=\"attribute\">border-style</span>: inherit;</span><br><span class=\"line\"><span class=\"attribute\">border-style</span>: initial;</span><br><span class=\"line\"><span class=\"attribute\">border-style</span>: unset;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><strong><code>border-width</code>：</strong>设置盒子模型的边框宽度</li>\n<li><strong><code>border-color</code>：</strong>设置元素四个边框颜色的快捷属性<ul>\n<li><code>border-top-color</code></li>\n<li><code>border-right-color</code></li>\n<li><code>border-bottom-color</code></li>\n<li><code>border-left-color</code></li>\n</ul>\n</li>\n<li><strong><code>border-radius</code>：</strong>设置矩形边框 4 个角的样式<ul>\n<li>可以用来设置非常神奇的样式</li>\n</ul>\n</li>\n<li><strong><code>border-collapse</code>：</strong>设置相邻格子是否共享边框，设置在<code>&lt;table&gt;</code>标签里</li>\n</ul>\n<h3 id=\"2-8-元素展示格式\"><a href=\"#2-8-元素展示格式\" class=\"headerlink\" title=\"2.8 元素展示格式\"></a>2.8 元素展示格式</h3><ul>\n<li><strong><code>display</code>:</strong> <ul>\n<li><code>block</code>: <code>&lt;div&gt;</code><ul>\n<li>独占一行</li>\n<li>width、height、margin（外边距）、padding（内边距）均可控制</li>\n<li>width 默认 100%</li>\n</ul>\n</li>\n<li><code>inline</code>: <code>&lt;span&gt;</code><ul>\n<li>可以共占一行</li>\n<li>width 与 height 无效，水平方向的 margin 与 padding 有效，竖直方向的 margin 与 padding 无效</li>\n<li>width 默认为本身内容宽度</li>\n</ul>\n</li>\n<li><code>inline-block</code>: <code>&lt;img&gt;</code><ul>\n<li>可以共占一行</li>\n<li>width、height、margin、padding 均可控制</li>\n<li>width 默认为本身内容宽度</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong><code>white-space</code>：</strong>设置如何处理元素中的空白<ul>\n<li><code>nowrap</code>：不自动换行，多的直接溢出</li>\n<li><code>pre</code>：保留文本里的换行（原格式）？</li>\n</ul>\n</li>\n<li><strong><code>text-overflow</code>：</strong>设置文本溢出文本框部分的处理<ul>\n<li><code>hidden</code>：截断，不显示</li>\n<li><code>ellipsis</code>：超出部分用省略号代替</li>\n</ul>\n</li>\n<li><strong><code>overflow</code>：</strong>设置内容显示是否有滚轮，分为 <code>overflow-x</code>，<code>overflow-y</code><ul>\n<li><code>hidden</code>：不显示滚轮</li>\n<li><code>auto</code>：自动设置滚轮</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"2-9-内外边距\"><a href=\"#2-9-内外边距\" class=\"headerlink\" title=\"2.9 内外边距\"></a>2.9 内外边距</h3><p><strong>边距：最小距离</strong></p>\n<ul>\n<li><p><strong><code>margin</code>：</strong>外边距</p>\n<ul>\n<li><p>直接设定 4 个值（上右下左）</p>\n</li>\n<li><p>分别指明 4 个方向：</p>\n<ul>\n<li><code>margin-top</code></li>\n<li><code>margin-right</code></li>\n<li><code>margin-bottom</code></li>\n<li><code>margin-left</code></li>\n</ul>\n</li>\n<li><p>可取值：</p>\n<ul>\n<li>length：固定值→xxpx</li>\n<li>percentage：相对于包含块的宽度的百分比</li>\n<li>auto：让浏览器自己选</li>\n</ul>\n<p><img src=\"/./html-css-js/84ba5c03-a8ea-463f-9eee-7801b6431415.png\" alt=\"84ba5c03-a8ea-463f-9eee-7801b6431415\"></p>\n</li>\n</ul>\n</li>\n<li><p><strong><code>padding</code>：</strong>内边距，用法和 padding 同</p>\n<ul>\n<li><strong>元素最后大小=初始大小+内边距大小+边界大小</strong></li>\n<li><strong>width=content+padding+border</strong></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"2-10-盒子模型\"><a href=\"#2-10-盒子模型\" class=\"headerlink\" title=\"2.10 盒子模型\"></a>2.10 盒子模型</h3><ul>\n<li><strong><code>Box-sizing</code>:</strong><ul>\n<li>设置元素总宽度和总高度，锁死</li>\n<li><strong>content-box：</strong>默认值，设置 border，padding 均会增加元素的宽高</li>\n<li><strong>border-box：</strong>设置 border 和 padding 不会改变元素的宽高，而是挤占内容区域</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"2-11-位置\"><a href=\"#2-11-位置\" class=\"headerlink\" title=\"2.11 位置\"></a>2.11 位置</h3><p><code>position</code>：指定一个元素在文档中的定位方式</p>\n<p><img src=\"/./html-css-js/35b883fb-a949-4d00-8022-adfe101d12d9.png\" alt=\"35b883fb-a949-4d00-8022-adfe101d12d9\"></p>\n<h3 id=\"2-11-浮动\"><a href=\"#2-11-浮动\" class=\"headerlink\" title=\"2.11 浮动\"></a>2.11 浮动</h3><p><code>float</code>: </p>\n<p><code>clear</code>: </p>\n<h3 id=\"2-12-flex-布局\"><a href=\"#2-12-flex-布局\" class=\"headerlink\" title=\"2.12 flex 布局\"></a>2.12 flex 布局</h3><p>设置弹性项目如何增大或缩小以适应其弹性容器中可用的空间→更好布局各个模块</p>\n<ul>\n<li><p>主轴→    交叉轴↓    优先沿主轴方向，摆满后沿交叉轴方向延伸</p>\n<br>\n\n<br>\n</li>\n<li><img src=\"./html-css-js/79ce244e-5e1a-4db0-9d11-e9c688f46d60.png\" style=\"margin: auto;\">\n\n<div style=\"width: 100%;text-align: center;\">没有 flex</div>\n<br>\n<img src=\"./html-css-js/bfb45f23-f63f-401e-a24d-da6be9e14341.png\" alt=\"bfb45f23-f63f-401e-a24d-da6be9e14341\" style=\"margin:auto;\">\n<div style=\"width: 100%;text-align: center;\">加了 flex</div>\n<br>\n\n<ul>\n<li>可见 flex 可以改变内部元素排列方式</li>\n<li>当内部元素总宽度/长度大于当前元素时，会自动压缩</li>\n</ul>\n</li>\n<li><p><code>flex-direction</code>: </p>\n<ul>\n<li><code>row</code>：默认摆放方式，从左往右，从上往下</li>\n<li><code>row-reverse</code>：从右往左，从上往下</li>\n<li><code>column</code>：从上往下，从左往右</li>\n<li><code>column</code>：从下往上，从左往右</li>\n</ul>\n</li>\n<li><p><code>flex-wrap</code>:</p>\n<ul>\n<li>设置换行</li>\n<li><code>nowrap</code>：默认，不换行</li>\n<li><code>wrap</code>：换行，第一行在上</li>\n<li><code>wrap-reverse</code>：换行，第一行在下</li>\n</ul>\n</li>\n<li><p><code>flex-flow</code>:</p>\n<ul>\n<li>direction 和 wrap 一起设置</li>\n</ul>\n</li>\n<li><p><code>justify-content</code>: </p>\n<ul>\n<li><p>定义了浏览器之间如何分配顺着弹性容器主轴的元素之间及其周围的空前</p>\n</li>\n<li><p><code>flex-start</code>：默认，左对齐</p>\n<img src=\"./html-css-js/c4effc73-78e2-47d8-a169-486217700d59.png\" alt=\"c4effc73-78e2-47d8-a169-486217700d59\" style=\"margin: auto;\">\n</li>\n<li><p><code>flex-end</code>：右对齐</p>\n<img src=\"./html-css-js/612fa632-b1f3-46ec-b4c1-743910ce3a8c.png\" style=\"margin: auto;\">\n</li>\n<li><p><code>center</code>：居中</p>\n</li>\n<li><img src=\"./html-css-js/eeb1d23c-9838-47e1-b04d-563f9b6bf8cb.png\" alt=\"eeb1d23c-9838-47e1-b04d-563f9b6bf8cb\" style=\"margin: auto;\">\n</li>\n<li><p><code>space-between</code>：左右两端对齐，紧贴边缘</p>\n<img src=\"./html-css-js/bbb519d2-5893-4fd6-9257-a4083ce686b1.png\" alt=\"bbb519d2-5893-4fd6-9257-a4083ce686b1\" style=\"margin: auto;\">\n</li>\n<li><p><code>space-around</code>：每行均匀分配元素，相邻元素距离相同，每行第一个元素到行首的距离和每行最后一个元素到行尾的距离会是相邻元素之间距离的一半</p>\n<img src=\"./html-css-js/30c44c11-6f15-432f-9875-8efb19f7d307.png\" alt=\"30c44c11-6f15-432f-9875-8efb19f7d307\" style=\"margin: auto;\">\n</li>\n<li><p><code>space-evenly</code>：flex 项都沿着主轴均匀分布在指定的对齐容器中。相邻 flex 项之间的间距，主轴起始位置到第一个 flex 项的间距，主轴结束位置到最后一个 flex 项的间距，都完全一样</p>\n<img src=\"./html-css-js/9d8a6f13-8a11-4046-b5d3-0fd27952490d.png\" alt=\"9d8a6f13-8a11-4046-b5d3-0fd27952490d\" style=\"margin: auto;\"></li>\n</ul>\n</li>\n<li><p><code>align-items</code>:</p>\n</li>\n</ul>\n<p>将所有直接子节点上的 align-self 值设置为一个组。 align-self 属性设置项目在其包含块中在交叉轴方向上的对齐方式。</p>\n<ul>\n<li><p><code>flex-start</code>：元素向交叉轴起点对齐。</p>\n</li>\n<li><img src=\"./html-css-js/c4effc73-78e2-47d8-a169-486217700d59.png\" alt=\"c4effc73-78e2-47d8-a169-486217700d59\" style=\"margin: auto;\">\n</li>\n<li><p><code>flex-end</code>：元素向交叉轴终点对齐。</p>\n</li>\n</ul>\n<img src=\"./html-css-js/612fa632-b1f3-46ec-b4c1-743910ce3a8c.png\" alt=\"612fa632-b1f3-46ec-b4c1-743910ce3a8c\" style=\"margin: auto;\">\n\n<ul>\n<li><p><code>center</code>：元素在侧轴居中，沿交叉轴居中。<img src=\"./html-css-js/eeb1d23c-9838-47e1-b04d-563f9b6bf8cb.png\" alt=\"eeb1d23c-9838-47e1-b04d-563f9b6bf8cb\" style=\"margin: auto;\"></p>\n</li>\n<li><p><code>stretch</code>：当没有设置高度时，弹性元素被在侧轴方向被拉伸到与容器相同的高度或宽度。</p>\n</li>\n</ul>\n<img src=\"./html-css-js/3b533c56-1af3-48e1-a56d-f7aa46204ee4.png\" alt=\"3b533c56-1af3-48e1-a56d-f7aa46204ee4\" style=\"margin: auto;\">\n\n<ul>\n<li><code>align-content</code>:</li>\n</ul>\n<p>设置了浏览器如何沿着弹性盒子布局的纵轴和网格布局的主轴在内容项之间和周围分配空间。</p>\n<ul>\n<li><p><code>align-items</code>行在整个容器内均匀分布； 有行距，<code>align-content</code>没行距</p>\n</li>\n<li><p><code>flex-start</code>：所有行从垂直轴起点开始填充。第一行的垂直轴起点边和容器的垂直轴起点边对齐。接下来的每一行紧跟前一行。</p>\n</li>\n<li><p><code>flex-end</code>：所有行从垂直轴末尾开始填充。最后一行的垂直轴终点和容器的垂直轴终点对齐。同时所有后续行与前一个对齐。</p>\n</li>\n<li><p><code>center</code>：所有行朝向容器的中心填充。每行互相紧挨，相对于容器居中对齐。容器的垂直轴起点边和第一行的距离相等于容器的垂直轴终点边和最后一行的距离。</p>\n</li>\n<li><p><code>stretch</code>：拉伸所有行来填满剩余空间。剩余空间平均地分配给每一行。</p>\n</li>\n<li><p><code>order</code></p>\n</li>\n</ul>\n<p>决定元素展示顺序，值越小越靠前</p>\n<ul>\n<li><code>flex-grow</code>:<img src=\"./html-css-js/80b4060b-37a8-48a2-a477-306f75457811.png\" alt=\"80b4060b-37a8-48a2-a477-306f75457811\" style=\"margin: auto;\"></li>\n</ul>\n<p>设置 flex 项主尺寸的 flex 增长系数，默认 0，负值无效</p>\n<ul>\n<li><code>flex-shrink</code>:</li>\n</ul>\n<p>指定了 flex 元素的收缩规则。flex 元素仅在默认宽度之和大于容器的时候才会发生收缩，其收缩的大小是依据 flex-shrink 的值，负值无效，默认为 1。</p>\n<ul>\n<li><code>flex-basis</code>:<ul>\n<li>width 值可以是 &lt;length&gt;； 该值也可以是一个相对于其父弹性盒容器主轴尺寸的百分数 。负值是不被允许的。默认为 auto。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"2-13-响应式布局\"><a href=\"#2-13-响应式布局\" class=\"headerlink\" title=\"2.13 响应式布局\"></a>2.13 响应式布局</h3><p>适配不同设备的布局</p>\n<ul>\n<li>media 查询</li>\n</ul>\n<p>在特定屏幕宽度应用特定 CSS→在不同环境写不同 CSS</p>\n<ul>\n<li>设备大小：<ul>\n<li>xs:极小</li>\n<li>sm:小</li>\n<li>md:中等</li>\n<li>lg:大</li>\n<li>xl:极大</li>\n</ul>\n</li>\n<li>可以用 bootstrap 包来设计响应式布局，class 里面多叠几个就行</li>\n</ul>\n<h2 id=\"3-JS\"><a href=\"#3-JS\" class=\"headerlink\" title=\"3.JS\"></a>3.JS</h2><p>绝大部分在前端执行，后端 JS 要用 NodeJS，有更多选择方案所以一般不用 JS</p>\n<h3 id=\"3-1-调用和执行方式\"><a href=\"#3-1-调用和执行方式\" class=\"headerlink\" title=\"3.1 调用和执行方式\"></a>3.1 调用和执行方式</h3><ul>\n<li>使用方式：<ul>\n<li>在 html 页面任意位置上加上<code>&lt;script type=\"module\"&gt;&lt;/script&gt;</code>标签</li>\n</ul>\n</li>\n</ul>\n<p>（ECMAScript6 写法）</p>\n<ul>\n<li><p>直接引入文件：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=<span class=\"string\">\"module\"</span> src=<span class=\"string\">\"/static/js/index.js\"</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>将所需的代码通过<code>import</code>关键字引入到当前作用域</p>\n</li>\n<li><p>执行顺序：</p>\n<ul>\n<li><p>类似于 html 和 css，从上向下</p>\n</li>\n<li><p>事件驱动执行</p>\n</li>\n</ul>\n</li>\n<li><p>html、css、js 之间的关系：</p>\n<ul>\n<li>css 控制 html</li>\n<li>js 控制 html 和 css</li>\n<li>为了方便开发和维护，尽量按照上述顺序写代码，不要再 html 中调用 js 里面的函数</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"3-2-变量与运算符\"><a href=\"#3-2-变量与运算符\" class=\"headerlink\" title=\"3.2 变量与运算符\"></a>3.2 变量与运算符</h3><ul>\n<li><p><code>let</code>和<code>const</code>：<code>let</code> 变量，<code>const</code> 常量，不需要声明类型，js 里面类型是动态的</p>\n</li>\n<li><p>变量类型：</p>\n<ul>\n<li><p><code>number</code>：数值</p>\n</li>\n<li><p><code>string</code>：字符串，不区分单双引号；每一位都是只读变量，不允许改变，要改变只能创建新的字符串来存，例如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> s1 = <span class=\"string\">\"acwing\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> s2 = s1.<span class=\"title function_\">substr</span>(<span class=\"number\">0</span>, <span class=\"number\">1</span>) + <span class=\"string\">'x'</span> + s1.<span class=\"title function_\">substr</span>(<span class=\"number\">2</span>); </span><br><span class=\"line\"><span class=\"comment\">// s2 = \"axwing\"</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p><code>boolean</code>：布尔</p>\n</li>\n<li><p><code>object</code>：对象，类似于 C++里面的指针，例如：<code>[1, 2, 3]</code>，<code>{name: \"lgj\", age: 18}</code></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> d = {</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">'jerry'</span>, <span class=\"comment\">// 前面的name可加可不加引号</span></span><br><span class=\"line\">    <span class=\"attr\">age</span>: <span class=\"number\">18</span>,</span><br><span class=\"line\">};</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(d[<span class=\"string\">\"name\"</span>]); <span class=\"comment\">// map输出，必须加引号，同时这里允许动态变值</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(d.<span class=\"property\">name</span>); <span class=\"comment\">// 点输出</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> key = <span class=\"string\">\"name\"</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(d[key]); <span class=\"comment\">// 允许</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(d.<span class=\"property\">key</span>); <span class=\"comment\">// 不允许</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 字典允许动态添加属性</span></span><br><span class=\"line\">d.<span class=\"property\">school</span> = <span class=\"string\">\"sysu\"</span>; <span class=\"comment\">// 添加school属性</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 遍历字典</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> key <span class=\"keyword\">in</span> d) {</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(d[key]);</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>undefined</code>：未定义的变量</p>\n</li>\n<li><p>输出变量类型：</p>\n<ul>\n<li><code>console.log(typeof x)</code></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"3-3-输入与输出\"><a href=\"#3-3-输入与输出\" class=\"headerlink\" title=\"3.3 输入与输出\"></a>3.3 输入与输出</h3><ul>\n<li><strong>输入：</strong><ul>\n<li>从 html 与用户的交互中输入信息，例如通过<code>input</code>，<code>textarea</code>等标签获取用户键盘输入，通过<code>click</code>，<code>hover</code>等事件获取用户鼠标输入</li>\n<li>通过<code>ajax</code>与<code>websocket</code>从服务器端获取输入</li>\n<li>标准输入</li>\n</ul>\n</li>\n<li><strong>输出：</strong><ul>\n<li>调试用<code>console.log</code>，输出到浏览器控制台</li>\n<li>改变当前页面的 html 和 css</li>\n<li>通过<code>ajax</code>与<code>websocket</code>将结果返回到服务器</li>\n</ul>\n</li>\n<li><strong>格式化字符串：</strong></li>\n</ul>\n<img src=\"./html-css-js/2d3a6bad-b8c2-4e02-b01c-83aaf67bb76f.png\" alt=\"2d3a6bad-b8c2-4e02-b01c-83aaf67bb76f\" style=\"margin: auto;\">\n\n\n\n<h3 id=\"3-4-判断和循环语句\"><a href=\"#3-4-判断和循环语句\" class=\"headerlink\" title=\"3.4 判断和循环语句\"></a>3.4 判断和循环语句</h3><p>同 C++</p>\n<h3 id=\"3-5-对象\"><a href=\"#3-5-对象\" class=\"headerlink\" title=\"3.5 对象\"></a>3.5 对象</h3><p>一个字典，类似于 map，由<code>key:value</code>对构成</p>\n<p><code>key</code>均为字符串，但是可以不加引号</p>\n<p><code>value</code>可以是字符串、数组、数值、函数…………</p>\n<ul>\n<li><code>value</code>可以是变量，数组，对象，函数等</li>\n<li>函数中的<code>this</code>用来引用该函数的拥有者</li>\n</ul>\n<p>例如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> person = {</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">\"yxc\"</span>;  </span><br><span class=\"line\">    <span class=\"attr\">age</span>: <span class=\"number\">18</span>,</span><br><span class=\"line\">    <span class=\"attr\">money</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"attr\">add_money</span>: <span class=\"keyword\">function</span> (<span class=\"params\">x</span>) {</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">money</span> += x;</span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n\n<p>对象属性与函数的调用方式：</p>\n<ul>\n<li><code>person.name</code>、<code>person.add_money()</code>: <ul>\n<li>简洁，但是关键字不可动态变化</li>\n</ul>\n</li>\n<li><code>person[\"name\"]</code>、<code>person[\"add_money\"]()</code><ul>\n<li>繁琐，但是关键字可以动态变化</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"3-6-数组\"><a href=\"#3-6-数组\" class=\"headerlink\" title=\"3.6 数组\"></a>3.6 数组</h3><ul>\n<li><p>特殊的对象，元素的变量类型是动态的</p>\n<ul>\n<li><p>如：</p>\n</li>\n<li><div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki Aurora Future\" style=\"background-color: #202020\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> a </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">[</span><span style=\"color: #505153\">'</span><span style=\"color: #CCCCCC\">lgj</span><span style=\"color: #505153\">'</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">18</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">175</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">65</span><span style=\"color: #505153\">]</span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">&lt;</span><span style=\"color: #DA67DA\">!</span><span style=\"color: #9569EC\">--</span><span style=\"color: #CCCCCC\">code￼</span><span style=\"color: #9569EC\">15--&gt;</span></span></code></pre></div></li>\n<li><p>可以通过这种访问方式动态赋值，甚至允许改变元素的类型</p>\n</li>\n<li><p>js 里面没有下标越界概念，遇到没有定义的位置直接返回<code>undefined</code>，不会报错，甚至允许负下标的存在</p>\n</li>\n<li><p>数组的长度：最大下标 + 1</p>\n</li>\n</ul>\n</li>\n<li><p>常用<code>api</code></p>\n<ul>\n<li><p><code>length</code>：返回数组长度，注意是属性，不加<code>()</code></p>\n</li>\n<li><p><code>push()</code>：添加元素</p>\n</li>\n<li><p><code>pop()</code>：弹出元素</p>\n</li>\n<li><p><code>splice(a, b)</code>：删除从 a 开始的 b 个元素</p>\n</li>\n<li><p><code>sort()</code>：默认从小到大排序，对整个数组排序</p>\n<ul>\n<li><p>自定义比较函数：<code>array.sort(cmp)</code>函数<code>cmp</code>输入两个比较的元素，返回一个实数</p>\n<ul>\n<li><p>例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 给数组降序排序</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> a = [<span class=\"number\">5</span>, <span class=\"number\">3</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> main = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a);</span><br><span class=\"line\">    </span><br><span class=\"line\">    a.<span class=\"title function_\">sort</span>(<span class=\"keyword\">function</span>(<span class=\"params\">x, y</span>) {</span><br><span class=\"line\">        x = <span class=\"built_in\">parseInt</span>(x), y = <span class=\"built_in\">parseInt</span>(y);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> y - x;</span><br><span class=\"line\">    });</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(a);</span><br><span class=\"line\">};</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> {</span><br><span class=\"line\">    main</span><br><span class=\"line\">};</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"3-7-函数\"><a href=\"#3-7-函数\" class=\"headerlink\" title=\"3.7 函数\"></a>3.7 函数</h3><p>类型为<code>function</code>，依靠对象实现</p>\n<ul>\n<li>定义方式：一共有 3 种</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 直接定义函数</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">add</span> (<span class=\"params\">a, b</span>) {</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a + b;</span><br><span class=\"line\">};</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 声明函数变量</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> add = <span class=\"keyword\">function</span> (<span class=\"params\">a, b</span>) {    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> a + b;</span><br><span class=\"line\">};</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 第二种方法的等价写法，如果只有一个参数可以不加括号</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"title function_\">add</span> = (<span class=\"params\">a, b</span>) =&gt; {</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a + b;</span><br><span class=\"line\">};</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>可以不按照函数的定义格式传入参数，没有传入的参数默认为<code>undefined</code>，由于这样 js 里面应该是不存在函数重载的，太随意了吧</li>\n<li>函数返回值默认是<code>undefined</code></li>\n</ul>\n<h3 id=\"3-8-类\"><a href=\"#3-8-类\" class=\"headerlink\" title=\"3.8 类\"></a>3.8 类</h3><p>与<code>C++</code>的<code>class</code>类似，但是不存在私有成员</p>\n<p>一般用驼峰命名法，即每个单词首字母大写</p>\n<ul>\n<li>定义</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Point</span> {</span><br><span class=\"line\">    <span class=\"comment\">// 构造函数</span></span><br><span class=\"line\">    <span class=\"title function_\">constructor</span>(<span class=\"params\">x, y</span>) {</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">x</span> = x;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">y</span> = y;</span><br><span class=\"line\">    }</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 类内函数不用加function关键字</span></span><br><span class=\"line\">    <span class=\"title function_\">init</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">sum</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">x</span> + <span class=\"variable language_\">this</span>.<span class=\"property\">y</span>;</span><br><span class=\"line\">    }</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"title function_\">toString</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">`(<span class=\"subst\">${<span class=\"variable language_\">this</span>.x}</span>, <span class=\"subst\">${<span class=\"variable language_\">this</span>.y}</span>)`</span>;</span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> main = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) {</span><br><span class=\"line\">    <span class=\"comment\">// 生成类对象</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> p = <span class=\"keyword\">new</span> <span class=\"title class_\">Point</span>(<span class=\"number\">3</span>, <span class=\"number\">4</span>);</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(p.<span class=\"property\">x</span>, p.<span class=\"property\">y</span>);</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(p.<span class=\"title function_\">toString</span>());</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> {</span><br><span class=\"line\">    main</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>继承：用<code>extends</code>关键字</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">clsss <span class=\"title class_\">ColorPoint</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Point</span> {</span><br><span class=\"line\">    <span class=\"title function_\">constructor</span>(<span class=\"params\">x, y, color</span>) {</span><br><span class=\"line\">        <span class=\"comment\">// 必须先调用基类构造函数</span></span><br><span class=\"line\">        <span class=\"variable language_\">super</span>(x, y); <span class=\"comment\">// 这里的super是一个函数，特指基类的构造函数</span></span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">color</span> = color;</span><br><span class=\"line\">    }</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 派生类的成员函数会覆盖基类的成员函数</span></span><br><span class=\"line\">    <span class=\"title function_\">toString</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">`<span class=\"subst\">${<span class=\"variable language_\">this</span>.color}</span> <span class=\"subst\">${<span class=\"variable language_\">super</span>.toString()}</span>`</span>; <span class=\"comment\">// 这里的super代表的是基类对象</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">}  </span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>静态方法：加<code>static</code>关键字<ul>\n<li>和<code>C++</code>类似，属于所有类对象的共有成员</li>\n<li>静态方法不会被类的实例继承，需要通过类名访问</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Point</span> {</span><br><span class=\"line\">    <span class=\"comment\">// 构造函数</span></span><br><span class=\"line\">    <span class=\"title function_\">constructor</span>(<span class=\"params\">x, y</span>) {</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">x</span> = x;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">y</span> = y;</span><br><span class=\"line\">    }</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 类内函数不用加function关键字</span></span><br><span class=\"line\">    <span class=\"title function_\">init</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">sum</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">x</span> + <span class=\"variable language_\">this</span>.<span class=\"property\">y</span>;</span><br><span class=\"line\">    }</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"title function_\">print_class_name</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">\"Point\"</span>);</span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> main = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">    <span class=\"keyword\">let</span> p = <span class=\"keyword\">new</span> <span class=\"title class_\">Point</span>(<span class=\"number\">3</span>, <span class=\"number\">4</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(p.<span class=\"title function_\">print_class_name</span>());     <span class=\"comment\">// 错误，静态对象不允许直接访问</span></span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">Point</span>.<span class=\"title function_\">print_class_name</span>()); <span class=\"comment\">// 正确，用类名调用静态对象   </span></span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>静态变量：<ul>\n<li>和静态对象类似，和类本身绑定</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Point</span> {</span><br><span class=\"line\">    <span class=\"comment\">// 构造函数</span></span><br><span class=\"line\">    <span class=\"title function_\">constructor</span>(<span class=\"params\">x, y</span>) {</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">x</span> = x;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">y</span> = y;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"title class_\">Point</span>.<span class=\"property\">cnt</span> ++ ;</span><br><span class=\"line\">    }</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 类内函数不用加function关键字</span></span><br><span class=\"line\">    <span class=\"title function_\">init</span>(<span class=\"params\"></span>) {</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">sum</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">x</span> + <span class=\"variable language_\">this</span>.<span class=\"property\">y</span>;</span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 静态变量定义：在类外</span></span><br><span class=\"line\"><span class=\"title class_\">Point</span>.<span class=\"property\">cnt</span> = <span class=\"number\">0</span>;</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"3-9-事件\"><a href=\"#3-9-事件\" class=\"headerlink\" title=\"3.9 事件\"></a>3.9 事件</h3><p>js 代码一般通过事件触发，即通过事件实现对 CSS 和 html 的操控</p>\n<p>可以通过<code>addEventListener</code>函数为元素绑定事件的触发函数</p>\n<p>常见的触发函数有：</p>\n<ul>\n<li><p>鼠标</p>\n<ul>\n<li><code>click</code>：左键点击</li>\n<li><code>dblclick</code>：左键双击</li>\n<li><code>contextmenu</code>：右键点击</li>\n<li><code>mousedown</code>：鼠标按下，包括左键、滚轮、右键<ul>\n<li><code>event.button</code>：0 表示左键，1 表示中键，2 表示右键</li>\n<li><code>event.clientX</code>：鼠标按下的位置</li>\n<li>其余的属性可以上 MDN 上搜索</li>\n</ul>\n</li>\n<li><code>mouseup</code>：鼠标弹起，包括左键、滚轮、右键<ul>\n<li><code>event.button</code>：同上</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>键盘</p>\n<ul>\n<li><code>keydown</code>：某个键是否被按住，事件会连续触发<ul>\n<li><code>event.code</code>：返回被按住的键</li>\n<li><code>event.altKey</code>，<code>event.ctrlKey</code>，<code>event.shiftKey</code>分别表示<code>alt</code>，<code>ctrl</code>，<code>shift</code>是否被按住</li>\n</ul>\n</li>\n<li><code>keyup</code>：某个键是否被释放<ul>\n<li><code>event</code>：同上</li>\n</ul>\n</li>\n<li><code>keypress</code>：紧跟在<code>keydown</code>事件后触发，只有按下字符键时触发</li>\n</ul>\n<p><img src=\"/./html-css-js/8928b5ed-b9a4-4a28-a739-356a69cd9b07.png\" alt=\"8928b5ed-b9a4-4a28-a739-356a69cd9b07\"></p>\n</li>\n<li><p>表单</p>\n<ul>\n<li><code>focus</code>：聚焦某个元素</li>\n<li><code>blur</code>：取消聚焦某个元素</li>\n<li><code>change</code>：某个元素的内容发生改变</li>\n</ul>\n</li>\n<li><p>窗口</p>\n<ul>\n<li>需要作用到<code>window</code>元素上</li>\n<li><code>resize</code>：窗口大小发生变化</li>\n<li><code>scroll</code>：滚动指定的元素</li>\n<li><code>load</code>：元素加载完成</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"3-10-常用库\"><a href=\"#3-10-常用库\" class=\"headerlink\" title=\"3.10 常用库\"></a>3.10 常用库</h3><h5 id=\"3-10-1-jQuery\"><a href=\"#3-10-1-jQuery\" class=\"headerlink\" title=\"3.10.1 jQuery\"></a>3.10.1 jQuery</h5><p>让 js 更方便联系前端元素</p>\n<ul>\n<li><p><strong>使用方式</strong></p>\n<ul>\n<li>在<head>元素中添加：</head></li>\n<li><script src=\"https://cdn.acwing.com/static/jquery/js/jquery-3.3.1.min.js\"></script></li>\n<li>按 jQuery 官网提示下载</li>\n</ul>\n</li>\n<li><p><strong>选择器</strong></p>\n<ul>\n<li><p><code>$(selector)</code> ，例如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">'div'</span>);</span><br><span class=\"line\">$(<span class=\"string\">'.big-div'</span>);</span><br><span class=\"line\">$(<span class=\"string\">'div &gt; p'</span>);</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n<p><code>selector</code>类似于 CSS 选择器</p>\n<ul>\n<li><p><strong>事件</strong></p>\n<ul>\n<li><p><code>$(selector).on(event, func)</code>绑定事件，例如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">'div'</span>).<span class=\"title function_\">on</span>(<span class=\"string\">'click'</span>, <span class=\"keyword\">function</span>(<span class=\"params\">e</span>) {</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">\"click div\"</span>);</span><br><span class=\"line\">});</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>$(selector).on(event, func)</code>解绑事件，例如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">'div'</span>).<span class=\"title function_\">on</span>(<span class=\"string\">'click'</span>, <span class=\"keyword\">function</span>(<span class=\"params\">e</span>) {    </span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">\"click div\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    $(<span class=\"string\">'div'</span>).<span class=\"title function_\">off</span>(<span class=\"string\">'click'</span>);</span><br><span class=\"line\">});</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>当存在多个相同类型的事件触发函数时，可以通过<code>click.name</code>来区分，例如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">'div'</span>).<span class=\"title function_\">on</span>(<span class=\"string\">'click.first'</span>, <span class=\"keyword\">function</span> (<span class=\"params\">e</span>) {</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">\"click div\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    $(<span class=\"string\">'div'</span>).<span class=\"title function_\">off</span>(<span class=\"string\">'click.first'</span>);</span><br><span class=\"line\">});</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在事件触发的函数中的<code>return false</code>等价于同时执行：</p>\n<ul>\n<li><code>e.stopPropagation()</code>：阻止事件向上传递</li>\n<li><code>e.preventDefault()</code>：阻止事件的默认行为</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>元素的隐藏、展现</p>\n<ul>\n<li><code>$A.hide()</code>：隐藏，参数表示消失时间</li>\n<li><code>$A.show()</code>：展现，参数表示出现时间</li>\n<li><code>$A.fadeOut()</code>：慢慢消失，参数表示消失时间</li>\n<li><code>$A.fadeIn()</code>：慢慢出现，参数表示出现时间</li>\n</ul>\n</li>\n<li><p><strong>元素的添加、删除</strong></p>\n<ul>\n<li><code>$('&lt;div class=\"mydiv\"&gt;&lt;span&gt;Hello World&lt;/span&gt;&lt;/div&gt;')</code>构造一个<code>jQuery</code>对象</li>\n<li><code>$A.append($B)</code>：将<code>$B</code>添加到<code>$A</code>的末尾</li>\n<li><code>$A.prepend($B)</code>：将<code>$B</code>添加到<code>$A</code>的前面</li>\n<li><code>$A.remove()</code>：删除元素<code>$A</code></li>\n<li><code>$A.empty()</code>：清空元素<code>$A</code>的所有儿子</li>\n</ul>\n</li>\n<li><p><strong>对类的操作</strong></p>\n<ul>\n<li><code>$A.addClass(class_name)</code>：添加某个类</li>\n<li><code>$A.removeClass(class_name)</code>：删除某个类</li>\n<li><code>$A.hasClass(class_name)</code>：判断某个类是否存在</li>\n</ul>\n</li>\n<li><p><strong>对 CSS 操作</strong></p>\n<ul>\n<li><p><code>$(\"div\").css(\"background-color\")</code>：获取某个 CSS 的属性</p>\n</li>\n<li><p><code>$(\"div\").css(\"background-color\",\"yellow\")</code>：设置某个 CSS 的属性</p>\n</li>\n<li><p>同时设置多个 CSS 的属性：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">'div'</span>).<span class=\"title function_\">css</span>({</span><br><span class=\"line\">    <span class=\"attr\">width</span>: <span class=\"string\">\"200px\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">height</span>: <span class=\"string\">\"200px\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"background-color\"</span>: <span class=\"string\">\"orange\"</span>,</span><br><span class=\"line\">});</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p><strong>对标签属性的操作</strong></p>\n</li>\n</ul>\n<p><code>$('div').attr('id')</code>：获取属性</p>\n<p><code>$('div').attr('id', 'ID')</code>：设置属性</p>\n<ul>\n<li><strong>对 HTML 内容、文本的操作</strong></li>\n</ul>\n<p>不需要背每个标签该用哪种，用到的时候 Google 或者百度即可。</p>\n<p><code>$A.html()</code>：获取、修改 HTML 内容</p>\n<p><code>$A.text()</code>：获取、修改文本信息</p>\n<p><code>$A.val()</code>：获取、修改文本的值，常用在<code>&lt;input&gt;</code>上</p>\n<ul>\n<li><p><strong>查找</strong></p>\n<ul>\n<li><code>$(selector).parent(filter)</code>：查找父元素</li>\n<li><code>$(selector).parents(filter)</code>：查找所有祖先元素</li>\n<li><code>$(selector).children(filter)</code>：在子元素中查找</li>\n<li><code>$(selector).find(filter)</code>：在所有后代元素中查找</li>\n</ul>\n</li>\n<li><p><code>ajax</code></p>\n</li>\n</ul>\n<p>从服务器端获取<code>JSON</code>数据，不用刷新界面</p>\n<ul>\n<li>GET 方法：</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$.<span class=\"title function_\">ajax</span>({</span><br><span class=\"line\">    <span class=\"attr\">url</span>: url, <span class=\"comment\">// 后端链接</span></span><br><span class=\"line\">    <span class=\"attr\">type</span>: <span class=\"string\">\"GET\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">data</span>: {</span><br><span class=\"line\">    },</span><br><span class=\"line\">    <span class=\"attr\">dataType</span>: <span class=\"string\">\"json\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">success</span>: <span class=\"keyword\">function</span> (<span class=\"params\">resp</span>) {</span><br><span class=\"line\"></span><br><span class=\"line\">    },</span><br><span class=\"line\">});</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>POST 方法：</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$.<span class=\"title function_\">ajax</span>({</span><br><span class=\"line\">    <span class=\"attr\">url</span>: url,</span><br><span class=\"line\">    <span class=\"attr\">type</span>: <span class=\"string\">\"POST\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">data</span>: {</span><br><span class=\"line\">    },</span><br><span class=\"line\">    <span class=\"attr\">dataType</span>: <span class=\"string\">\"json\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">success</span>: <span class=\"keyword\">function</span> (<span class=\"params\">resp</span>) {</span><br><span class=\"line\"></span><br><span class=\"line\">    },</span><br><span class=\"line\">});</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"3-10-2-setTimeout与setInterval\"><a href=\"#3-10-2-setTimeout与setInterval\" class=\"headerlink\" title=\"3.10.2 setTimeout与setInterval\"></a>3.10.2 <code>setTimeout</code>与<code>setInterval</code></h5><p>返回<code>number</code>型数据，代表当前函数的唯一<code>ID</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">setTimeout(func, delay)`：`delay`毫秒之后执行函数`func()</span><br></pre></td></tr></table></figure>\n\n<p><code>clearTimeout()</code>：关闭定时器，如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> timeout_id = <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> {</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">\"Hello World!\"</span>);</span><br><span class=\"line\">}, <span class=\"number\">2000</span>);    <span class=\"comment\">// 2秒之后输出\"Hello World!\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">clearTimeout</span>(timeout_id);     <span class=\"comment\">// 清除定时器</span></span><br></pre></td></tr></table></figure>\n\n<p><code>setInterval(func, delay)</code>：每隔<code>delay</code>毫秒执行<code>func()</code>，第一次在第<code>delay</code>毫秒执行</p>\n<p><code>clearInterval()</code>：关闭周期执行的函数，如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> interval_id = <span class=\"built_in\">setInterval</span>(<span class=\"function\">() =&gt;</span> {</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">\"Hello World!\"</span>);</span><br><span class=\"line\">}, <span class=\"number\">2000</span>);    <span class=\"comment\">// 每隔2秒输出一次\"Hello World!\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">clearInterval</span>(interval_id);    <span class=\"comment\">// 清除周期执行的函数</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"3-10-3-requestAnimationFrame\"><a href=\"#3-10-3-requestAnimationFrame\" class=\"headerlink\" title=\"3.10.3 requestAnimationFrame\"></a>3.10.3 <code>requestAnimationFrame</code></h5><p><code>requestAnimationFrame(func)</code>:</p>\n<p>在下次浏览器刷新(重新渲染之前)执行一次，通胀会用递归写法使其每秒执行60次<code>func</code>函数</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"title function_\">step</span> = (<span class=\"params\">timestamp</span>) =&gt; {  <span class=\"comment\">// 每帧将div的宽度增加1像素</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> div = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">'div'</span>);</span><br><span class=\"line\">    div.<span class=\"property\">style</span>.<span class=\"property\">width</span> = div.<span class=\"property\">clientWidth</span> + <span class=\"number\">1</span> + <span class=\"string\">'px'</span>;</span><br><span class=\"line\">    <span class=\"title function_\">requestAnimationFrame</span>(step);</span><br><span class=\"line\">};</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">requestAnimationFrame</span>(step);</span><br></pre></td></tr></table></figure>\n\n<p>与<code>setTimeout</code>和<code>setInterval</code>的区别：</p>\n<ul>\n<li><code>requestAnimationFrame</code>渲染动画的效果更好，性能更佳。</li>\n</ul>\n<p>该函数可以保证每两次调用之间的时间间隔相同，但<code>setTimeout</code>与<code>setInterval</code>不能保证这点。<code>setTmeout</code>两次调用之间的间隔包含回调函数的执行时间；<code>setInterval</code>只能保证按固定时间间隔将回调函数压入栈中，但具体的执行时间间隔仍然受回调函数的执行时间影响。</p>\n<p><code>setTimeout</code>：</p>\n<img src=\"./html-css-js/d8bb0b2d-d35c-40b3-8ab0-ef4ac466648b.png\" alt=\"d8bb0b2d-d35c-40b3-8ab0-ef4ac466648b\" style=\"margin: auto;\">\n\n<img src=\"./html-css-js/8928b5ed-b9a4-4a28-a739-356a69cd9b07.png\" alt=\"8928b5ed-b9a4-4a28-a739-356a69cd9b07\" style=\"margin: auto;\">\n\n<p><code>setInterval</code>:</p>\n<img src=\"./html-css-js/32bed491-8f7d-47b7-9f8c-930ef5063c28.png\" alt=\"32bed491-8f7d-47b7-9f8c-930ef5063c28\" style=\"margin: auto;\">\n\n<ul>\n<li><p>当页面在后台时，因为页面不再渲染，因此<code>requestAnimationFrame</code>不再执行。但<code>setTimeout</code>与<code>setInterval</code>函数会继续执行。</p>\n</li>\n<li><p><code>cancelAnimationFrame</code>：停止<code>requestAnimationFrame</code></p>\n</li>\n</ul>\n<h5 id=\"3-10-4-Map与Set\"><a href=\"#3-10-4-Map与Set\" class=\"headerlink\" title=\"3.10.4 Map与Set\"></a>3.10.4 <code>Map</code>与<code>Set</code></h5><ul>\n<li><p><code>Map</code>：保存键值对,不能排序</p>\n<ul>\n<li><p>用<code>for...of</code>或者<code>forEach</code>可以按插入顺序遍历</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// for...of</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> [key, value] <span class=\"keyword\">of</span> map) {</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(key, value);</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// forEach</span></span><br><span class=\"line\">map.<span class=\"title function_\">forEach</span>(<span class=\"keyword\">function</span>(<span class=\"params\">value, key</span>) {</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(key, value);</span><br><span class=\"line\">}) </span><br></pre></td></tr></table></figure>\n</li>\n<li><p>键值可以为任意值 ，包括函数、对象或任意基本类型</p>\n</li>\n</ul>\n</li>\n</ul>\n<p>常用API：</p>\n<ul>\n<li><p><code>set(key, value)</code>：插入键值对，如果<code>key</code>已存在，覆盖原有的<code>value</code></p>\n</li>\n<li><p><code>get(key)</code>：查找关键字，如果不存在，返回<code>undefined</code></p>\n</li>\n<li><p><code>size</code>：返回键值对数量</p>\n</li>\n<li><p><code>has(key)</code>：是否包含关键字<code>key</code></p>\n</li>\n<li><p><code>delete(key)</code>：删除关键字<code>key</code></p>\n</li>\n<li><p><code>clear()</code>：删除所有元素</p>\n</li>\n<li><p><code>Set</code>：存储任何类型的唯一值，无论是原始值或者是对象引用</p>\n<ul>\n<li>用<code>for...of</code>或者<code>forEach</code>可以按插入顺序遍历</li>\n<li>常用API：</li>\n<li><code>add()</code>：添加元素</li>\n<li><code>has()</code>：是否包含元素</li>\n<li><code>size</code>：返回元素数量</li>\n<li><code>delete()</code>：删除某个元素</li>\n<li><code>clear()</code>：删除所有元素</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"3-10-5-localStorage\"><a href=\"#3-10-5-localStorage\" class=\"headerlink\" title=\"3.10.5 localStorage\"></a>3.10.5 <code>localStorage</code></h5><p>在用户的浏览器上存储键值对，刷新后仍旧存在</p>\n<p>常用API：</p>\n<ul>\n<li><code>setItem(key, value)</code>：插入</li>\n<li><code>getItem(key)</code>：查找</li>\n<li><code>removeItem(key)</code>：删除</li>\n<li><code>clear()</code>：清空</li>\n</ul>\n<h5 id=\"3-10-6-JSON\"><a href=\"#3-10-6-JSON\" class=\"headerlink\" title=\"3.10.6 JSON\"></a>3.10.6 <code>JSON</code></h5><p>用于序列化对象、数组、数值、字符串、布尔值和<code>null</code></p>\n<p>常用API：</p>\n<ul>\n<li><code>JSON.parse()</code>：将字符串解析成对象</li>\n<li><code>JSON.stringify()</code>：将对象转化为字符串</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> obj = {</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">'lgj'</span>,</span><br><span class=\"line\">    <span class=\"attr\">age</span>: <span class=\"number\">19</span>,</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> str = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(obj); <span class=\"comment\">// 字符串转JSON</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> new_obj = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(str); <span class=\"comment\">// JSON转字符串</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(str);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(new_obj);</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"3-10-7-日期\"><a href=\"#3-10-7-日期\" class=\"headerlink\" title=\"3.10.7 日期\"></a>3.10.7 日期</h5><p>返回值为整数的API，数值为1970-1-1 00:00:00 UTC（世界标准时间）到某个时刻所经过的毫秒数：</p>\n<ul>\n<li><code>Date.now()</code>：返回现在时刻。</li>\n<li><code>Date.parse(\"2022-04-15T15:30:00.000+08:00\")</code>：返回北京时间2022年4月15日 15:30:00的时刻。</li>\n</ul>\n<p>与Date对象的实例相关的API：</p>\n<ul>\n<li><code>new Date()</code>：返回现在时刻。</li>\n<li><code>new Date(\"2022-04-15T15:30:00.000+08:00\")</code>：返回北京时间2022年4月15日 15:30:00的时刻。</li>\n<li>两个Date对象实例的差值为毫秒数</li>\n<li><code>getDay()</code>：返回星期，0表示星期日，1-6表示星期一至星期六</li>\n<li><code>getDate()</code>：返回日，数值为1-31</li>\n<li><code>getMonth()</code>：返回月，数值为0-11</li>\n<li><code>getFullYear()</code>：返回年份</li>\n<li><code>getHours()</code>：返回小时</li>\n<li><code>getMinutes()</code>：返回分钟</li>\n<li><code>getSeconds()</code>：返回秒</li>\n<li><code>getMilliseconds()</code>：返回毫秒</li>\n</ul>\n<h5 id=\"3-10-8-WebSocket\"><a href=\"#3-10-8-WebSocket\" class=\"headerlink\" title=\"3.10.8 WebSocket\"></a>3.10.8 <code>WebSocket</code></h5><p>与服务器建立全双工连接。</p>\n<p>常用API：</p>\n<ul>\n<li><code>new WebSocket('ws://``localhost:8080``');</code>：建立ws连接。</li>\n<li><code>send()</code>：向服务器端发送一个字符串。一般用JSON将传入的对象序列化为字符串。</li>\n<li><code>onopen</code>：类似于onclick，当连接建立时触发。</li>\n<li><code>onmessage</code>：当从服务器端接收到消息时触发。</li>\n<li><code>close()</code>：关闭连接。</li>\n<li><code>onclose</code>：当连接关闭后触发。</li>\n</ul>\n","text":"1.html1.1 文件结构html 文件以树的形式组织 1.2 基本标签 <html>: 根节点 <head>: 规定文档相关的配置信息：标题、引用的文档样式...","permalink":"/post/html-css-js","photos":[],"count_time":{"symbolsCount":"18k","symbolsTime":"17 mins."},"categories":[{"name":"技术","slug":"技术","count":1,"path":"api/categories/技术.json"}],"tags":[{"name":"html","slug":"html","count":1,"path":"api/tags/html.json"},{"name":"css","slug":"css","count":1,"path":"api/tags/css.json"},{"name":"js","slug":"js","count":1,"path":"api/tags/js.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-html\"><span class=\"toc-text\">1.html</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-1-%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">1.1 文件结构</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-2-%E5%9F%BA%E6%9C%AC%E6%A0%87%E7%AD%BE\"><span class=\"toc-text\">1.2 基本标签</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-3-%E6%B3%A8%E9%87%8A\"><span class=\"toc-text\">1.3 注释</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-4-%E6%96%87%E6%9C%AC%E6%A0%87%E7%AD%BE\"><span class=\"toc-text\">1.4 文本标签</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-5-%E5%9B%BE%E7%89%87\"><span class=\"toc-text\">1.5 图片</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-6-%E9%9F%B3%E9%A2%91%E4%B8%8E%E8%A7%86%E9%A2%91\"><span class=\"toc-text\">1.6 音频与视频</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-7-%E8%B6%85%E9%93%BE%E6%8E%A5\"><span class=\"toc-text\">1.7 超链接</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-8-%E8%A1%A8%E5%8D%95\"><span class=\"toc-text\">1.8 表单</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-9-%E5%88%97%E8%A1%A8\"><span class=\"toc-text\">1.9 列表</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-10-%E8%A1%A8%E6%A0%BC\"><span class=\"toc-text\">1.10 表格</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-11-%E8%AF%AD%E4%B9%89%E6%A0%87%E7%AD%BE\"><span class=\"toc-text\">1.11 语义标签</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-12-%E7%89%B9%E6%AE%8A%E7%AC%A6%E5%8F%B7\"><span class=\"toc-text\">1.12 特殊符号</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-CSS\"><span class=\"toc-text\">2.CSS</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-1-%E6%A0%B7%E5%BC%8F%E5%AE%9A%E4%B9%89%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">2.1 样式定义方式</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-2-%E9%80%89%E6%8B%A9%E5%99%A8\"><span class=\"toc-text\">2.2 选择器</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-3-%E9%A2%9C%E8%89%B2\"><span class=\"toc-text\">2.3 颜色</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-4-%E6%96%87%E6%9C%AC\"><span class=\"toc-text\">2.4 文本</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-5-%E5%AD%97%E4%BD%93\"><span class=\"toc-text\">2.5 字体</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-6-%E8%83%8C%E6%99%AF\"><span class=\"toc-text\">2.6 背景</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-7-%E8%BE%B9%E6%A1%86\"><span class=\"toc-text\">2.7 边框</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-8-%E5%85%83%E7%B4%A0%E5%B1%95%E7%A4%BA%E6%A0%BC%E5%BC%8F\"><span class=\"toc-text\">2.8 元素展示格式</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-9-%E5%86%85%E5%A4%96%E8%BE%B9%E8%B7%9D\"><span class=\"toc-text\">2.9 内外边距</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-10-%E7%9B%92%E5%AD%90%E6%A8%A1%E5%9E%8B\"><span class=\"toc-text\">2.10 盒子模型</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-11-%E4%BD%8D%E7%BD%AE\"><span class=\"toc-text\">2.11 位置</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-11-%E6%B5%AE%E5%8A%A8\"><span class=\"toc-text\">2.11 浮动</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-12-flex-%E5%B8%83%E5%B1%80\"><span class=\"toc-text\">2.12 flex 布局</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-13-%E5%93%8D%E5%BA%94%E5%BC%8F%E5%B8%83%E5%B1%80\"><span class=\"toc-text\">2.13 响应式布局</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-JS\"><span class=\"toc-text\">3.JS</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-1-%E8%B0%83%E7%94%A8%E5%92%8C%E6%89%A7%E8%A1%8C%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">3.1 调用和执行方式</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-2-%E5%8F%98%E9%87%8F%E4%B8%8E%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">3.2 变量与运算符</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-3-%E8%BE%93%E5%85%A5%E4%B8%8E%E8%BE%93%E5%87%BA\"><span class=\"toc-text\">3.3 输入与输出</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-4-%E5%88%A4%E6%96%AD%E5%92%8C%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">3.4 判断和循环语句</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-5-%E5%AF%B9%E8%B1%A1\"><span class=\"toc-text\">3.5 对象</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-6-%E6%95%B0%E7%BB%84\"><span class=\"toc-text\">3.6 数组</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-7-%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">3.7 函数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-8-%E7%B1%BB\"><span class=\"toc-text\">3.8 类</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-9-%E4%BA%8B%E4%BB%B6\"><span class=\"toc-text\">3.9 事件</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-10-%E5%B8%B8%E7%94%A8%E5%BA%93\"><span class=\"toc-text\">3.10 常用库</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#3-10-1-jQuery\"><span class=\"toc-text\">3.10.1 jQuery</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#3-10-2-setTimeout%E4%B8%8EsetInterval\"><span class=\"toc-text\">3.10.2 setTimeout与setInterval</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#3-10-3-requestAnimationFrame\"><span class=\"toc-text\">3.10.3 requestAnimationFrame</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#3-10-4-Map%E4%B8%8ESet\"><span class=\"toc-text\">3.10.4 Map与Set</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#3-10-5-localStorage\"><span class=\"toc-text\">3.10.5 localStorage</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#3-10-6-JSON\"><span class=\"toc-text\">3.10.6 JSON</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#3-10-7-%E6%97%A5%E6%9C%9F\"><span class=\"toc-text\">3.10.7 日期</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#3-10-8-WebSocket\"><span class=\"toc-text\">3.10.8 WebSocket</span></a></li></ol></li></ol></li></ol></li></ol>","author":{"name":"Jerry","slug":"blog-author","avatar":"https://th.bing.com/th/id/R.7a1adf834060c41d2d476af2a5e322fd?rik=N35%2fqYx%2fr4RSog&riu=http%3a%2f%2fimg.keaiming.com%2fuploads%2fallimg%2f2020090111%2fsvaseyx4m3v.jpg&ehk=EBywhQ9emNaCt5dbn%2b%2fxbUc5yK42H8b%2ffRDsZKdVI6I%3d&risl=&pid=ImgRaw&r=0","link":"/","description":"<strong>Keep a single spark to start a prairie fire.</strong>","socials":{"github":"https://github.com/Jerrylingj","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/2301_79143568?spm=1010.2135.3001.5343","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"数据结构与算法--week2","uid":"b1af6f6437b58f6d156f800c63cd3640","slug":"数据结构与算法-week2","date":"2024-10-05T11:16:27.000Z","updated":"2024-10-06T05:35:02.180Z","comments":true,"path":"api/articles/数据结构与算法-week2.json","cover":"https://img.freepik.com/premium-photo/captivating-anime-world-with-post-apocalyptic-city-wallpaper_916191-69107.jpg","text":"1.链表反转 题目 题目描述： 下面所给的是链表节点的结构，你的任务是写一个函数将链表反转。 12345678910struct ListNode { int ...","permalink":"/post/数据结构与算法-week2","photos":[],"count_time":{"symbolsCount":"5.2k","symbolsTime":"5 mins."},"categories":[{"name":"算法","slug":"算法","count":15,"path":"api/categories/算法.json"}],"tags":[{"name":"字符串","slug":"字符串","count":2,"path":"api/tags/字符串.json"},{"name":"链表","slug":"链表","count":2,"path":"api/tags/链表.json"},{"name":"队列","slug":"队列","count":2,"path":"api/tags/队列.json"},{"name":"贪心","slug":"贪心","count":1,"path":"api/tags/贪心.json"},{"name":"dfs","slug":"dfs","count":1,"path":"api/tags/dfs.json"}],"author":{"name":"Jerry","slug":"blog-author","avatar":"https://th.bing.com/th/id/R.7a1adf834060c41d2d476af2a5e322fd?rik=N35%2fqYx%2fr4RSog&riu=http%3a%2f%2fimg.keaiming.com%2fuploads%2fallimg%2f2020090111%2fsvaseyx4m3v.jpg&ehk=EBywhQ9emNaCt5dbn%2b%2fxbUc5yK42H8b%2ffRDsZKdVI6I%3d&risl=&pid=ImgRaw&r=0","link":"/","description":"<strong>Keep a single spark to start a prairie fire.</strong>","socials":{"github":"https://github.com/Jerrylingj","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/2301_79143568?spm=1010.2135.3001.5343","juejin":"","customs":{}}}},"next_post":{"title":"GPT获取sso信息出错","uid":"d6ffd179ab68b0daa56addeeaeb71166","slug":"GPT获取sso信息出错","date":"2024-09-30T08:43:11.000Z","updated":"2024-09-30T08:55:13.989Z","comments":true,"path":"api/articles/GPT获取sso信息出错.json","cover":"https://www.toopic.cn/public/uploads/small/171989644860317198964484.png","text":"尝试登陆GPT账号发现报错rt 解决 在网址的“auth”中加个0，改成https://auth0.openai.com//authorize?client这种...","permalink":"/post/GPT获取sso信息出错","photos":[],"count_time":{"symbolsCount":96,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"GPT","slug":"GPT","count":1,"path":"api/tags/GPT.json"}],"author":{"name":"Jerry","slug":"blog-author","avatar":"https://th.bing.com/th/id/R.7a1adf834060c41d2d476af2a5e322fd?rik=N35%2fqYx%2fr4RSog&riu=http%3a%2f%2fimg.keaiming.com%2fuploads%2fallimg%2f2020090111%2fsvaseyx4m3v.jpg&ehk=EBywhQ9emNaCt5dbn%2b%2fxbUc5yK42H8b%2ffRDsZKdVI6I%3d&risl=&pid=ImgRaw&r=0","link":"/","description":"<strong>Keep a single spark to start a prairie fire.</strong>","socials":{"github":"https://github.com/Jerrylingj","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/2301_79143568?spm=1010.2135.3001.5343","juejin":"","customs":{}}}}}