{"name":"算法","slug":"算法","count":19,"postlist":[{"title":"数据结构与算法--week6","uid":"11f0ab19a9ece9ddf223ec86aeed180d","slug":"数据结构与算法--week6","date":"2024-10-17T07:54:38.000Z","updated":"2024-10-18T04:51:17.827Z","comments":true,"path":"api/articles/数据结构与算法--week6.json","cover":"https://ts1.cn.mm.bing.net/th/id/R-C.6421a70b91c34f8470afc0cf4d8e9489?rik=P4gNaOUqQCaUbA&riu=http%3a%2f%2fi0.hdslb.com%2fbfs%2farticle%2fb90c18f53c9331efe6ebddf77f3b2765790095a3.jpg&ehk=NPDR3SZtLbox%2fNp4ucQ1uFXnyClebOpNs4Nwegt6EWA%3d&risl=&pid=ImgRaw&r=0","text":"1.直线上的点 题目 问题描述: 小明很喜欢研究直线上的点。最近，小明的妈妈给小黄出了一个问题，给定 个 轴上的整数点，可以有多少种方式选择三个不同的点，使得它...","permalink":"/post/数据结构与算法--week6","photos":[],"count_time":{"symbolsCount":"9k","symbolsTime":"8 mins."},"categories":[{"name":"算法","slug":"算法","count":19,"path":"api/categories/算法.json"}],"tags":[{"name":"栈","slug":"栈","count":3,"path":"api/tags/栈.json"},{"name":"队列","slug":"队列","count":3,"path":"api/tags/队列.json"},{"name":"堆","slug":"堆","count":2,"path":"api/tags/堆.json"},{"name":"双端队列","slug":"双端队列","count":1,"path":"api/tags/双端队列.json"},{"name":"迭代加深","slug":"迭代加深","count":1,"path":"api/tags/迭代加深.json"}],"author":{"name":"Jerry","slug":"blog-author","avatar":"https://th.bing.com/th/id/R.7a1adf834060c41d2d476af2a5e322fd?rik=N35%2fqYx%2fr4RSog&riu=http%3a%2f%2fimg.keaiming.com%2fuploads%2fallimg%2f2020090111%2fsvaseyx4m3v.jpg&ehk=EBywhQ9emNaCt5dbn%2b%2fxbUc5yK42H8b%2ffRDsZKdVI6I%3d&risl=&pid=ImgRaw&r=0","link":"/","description":"<strong>Keep a single spark to start a prairie fire.</strong>","socials":{"github":"https://github.com/Jerrylingj","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/2301_79143568?spm=1010.2135.3001.5343","juejin":"","customs":{}}}},{"title":"数据结构与算法--week5","uid":"cb49df4bebbec542f5250fde4983b056","slug":"数据结构与算法-week5","date":"2024-10-10T08:30:29.000Z","updated":"2024-10-17T16:08:24.769Z","comments":true,"path":"api/articles/数据结构与算法-week5.json","cover":"https://th.bing.com/th/id/R.55f1966b615b41a131db9e993009d61d?rik=XCQ%2bJSCaFKXbZw&riu=http%3a%2f%2fimgs.aixifan.com%2flive%2f1483602004055%2f1483602004055.jpg&ehk=f5jovT%2fWC9O6Xgco6BJ%2ftpaARBfqBYNYQBtVAZUHIg8%3d&risl=&pid=ImgRaw&r=0","text":"1.栈 题目 题目描述 给定一个栈S和如下4种操作。 S.push(X): 将整数X入栈S。 S.pop(): 如果栈S不为空，弹出栈顶元素。 S.top():...","permalink":"/post/数据结构与算法-week5","photos":[],"count_time":{"symbolsCount":"6.4k","symbolsTime":"6 mins."},"categories":[{"name":"算法","slug":"算法","count":19,"path":"api/categories/算法.json"}],"tags":[{"name":"栈","slug":"栈","count":3,"path":"api/tags/栈.json"}],"author":{"name":"Jerry","slug":"blog-author","avatar":"https://th.bing.com/th/id/R.7a1adf834060c41d2d476af2a5e322fd?rik=N35%2fqYx%2fr4RSog&riu=http%3a%2f%2fimg.keaiming.com%2fuploads%2fallimg%2f2020090111%2fsvaseyx4m3v.jpg&ehk=EBywhQ9emNaCt5dbn%2b%2fxbUc5yK42H8b%2ffRDsZKdVI6I%3d&risl=&pid=ImgRaw&r=0","link":"/","description":"<strong>Keep a single spark to start a prairie fire.</strong>","socials":{"github":"https://github.com/Jerrylingj","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/2301_79143568?spm=1010.2135.3001.5343","juejin":"","customs":{}}},"feature":true},{"title":"离散化","uid":"7f00768b865696d227f7b794a43f7717","slug":"离散化","date":"2024-10-06T16:01:43.000Z","updated":"2024-10-15T08:04:37.947Z","comments":true,"path":"api/articles/离散化.json","cover":"https://pic4.zhimg.com/v2-c326fcfdd903de8535927295f821224c_r.jpg","text":"引入简单来说，离散化就是一种映射 想象这样一个场景，假如你需要对数轴上范围为 的数进行操作，但是只需要操作 个数 开 的数组太浪费，开 的数组不够用，离散化正是...","permalink":"/post/离散化","photos":[],"count_time":{"symbolsCount":"2.6k","symbolsTime":"2 mins."},"categories":[{"name":"算法","slug":"算法","count":19,"path":"api/categories/算法.json"}],"tags":[{"name":"基础算法","slug":"基础算法","count":4,"path":"api/tags/基础算法.json"},{"name":"离散化","slug":"离散化","count":1,"path":"api/tags/离散化.json"}],"author":{"name":"Jerry","slug":"blog-author","avatar":"https://th.bing.com/th/id/R.7a1adf834060c41d2d476af2a5e322fd?rik=N35%2fqYx%2fr4RSog&riu=http%3a%2f%2fimg.keaiming.com%2fuploads%2fallimg%2f2020090111%2fsvaseyx4m3v.jpg&ehk=EBywhQ9emNaCt5dbn%2b%2fxbUc5yK42H8b%2ffRDsZKdVI6I%3d&risl=&pid=ImgRaw&r=0","link":"/","description":"<strong>Keep a single spark to start a prairie fire.</strong>","socials":{"github":"https://github.com/Jerrylingj","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/2301_79143568?spm=1010.2135.3001.5343","juejin":"","customs":{}}}},{"title":"前缀和与差分","uid":"f65c2271ed43cdf14e2eea3c0c440d44","slug":"前缀和与差分","date":"2024-10-06T16:01:42.000Z","updated":"2024-10-15T06:55:59.214Z","comments":true,"path":"api/articles/前缀和与差分.json","cover":"https://th.bing.com/th/id/R.f4f614c0aeb045d2f427ea094ab82796?rik=8uZrt4cHUNihww&riu=http%3a%2f%2fwww.acgtubao.com%2fwp-content%2fuploads%2f2019%2f01%2f70022367_p0.jpg&ehk=wdBmbm30m8tZJvr4tiSCsdVCldjX0gYOIYiMUPOYxQY%3d&risl=&pid=ImgRaw&r=0","text":"引入定义数组 为 的前缀和数组， 为 的差分数组， 前缀和与差分为一对互逆关系，类似高中时的数列通项 和前n项和 死去的记忆立马复活，这样一类比就清晰了许多吧~...","permalink":"/post/前缀和与差分","photos":[],"count_time":{"symbolsCount":709,"symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":19,"path":"api/categories/算法.json"}],"tags":[{"name":"基础算法","slug":"基础算法","count":4,"path":"api/tags/基础算法.json"},{"name":"前缀和","slug":"前缀和","count":2,"path":"api/tags/前缀和.json"},{"name":"差分","slug":"差分","count":1,"path":"api/tags/差分.json"}],"author":{"name":"Jerry","slug":"blog-author","avatar":"https://th.bing.com/th/id/R.7a1adf834060c41d2d476af2a5e322fd?rik=N35%2fqYx%2fr4RSog&riu=http%3a%2f%2fimg.keaiming.com%2fuploads%2fallimg%2f2020090111%2fsvaseyx4m3v.jpg&ehk=EBywhQ9emNaCt5dbn%2b%2fxbUc5yK42H8b%2ffRDsZKdVI6I%3d&risl=&pid=ImgRaw&r=0","link":"/","description":"<strong>Keep a single spark to start a prairie fire.</strong>","socials":{"github":"https://github.com/Jerrylingj","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/2301_79143568?spm=1010.2135.3001.5343","juejin":"","customs":{}}}},{"title":"KMP","uid":"53896b079468d4c41963b2300dea196e","slug":"KMP","date":"2024-10-06T16:01:03.000Z","updated":"2024-10-16T14:20:42.811Z","comments":true,"path":"api/articles/KMP.json","cover":"https://pic4.zhimg.com/v2-fc28ae7db2d4effa24ba948093be2f87_r.jpg","text":"KMP算法引入 算法用于解决字符串匹配问题，判断字符串B是否为主串A的字串，复杂度为 (两个字符串的长度) 对于朴素的字符串匹配问题，思路是，将A，B串从前到后...","permalink":"/post/KMP","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":19,"path":"api/categories/算法.json"}],"tags":[{"name":"字符串","slug":"字符串","count":2,"path":"api/tags/字符串.json"},{"name":"KMP","slug":"KMP","count":1,"path":"api/tags/KMP.json"}],"author":{"name":"Jerry","slug":"blog-author","avatar":"https://th.bing.com/th/id/R.7a1adf834060c41d2d476af2a5e322fd?rik=N35%2fqYx%2fr4RSog&riu=http%3a%2f%2fimg.keaiming.com%2fuploads%2fallimg%2f2020090111%2fsvaseyx4m3v.jpg&ehk=EBywhQ9emNaCt5dbn%2b%2fxbUc5yK42H8b%2ffRDsZKdVI6I%3d&risl=&pid=ImgRaw&r=0","link":"/","description":"<strong>Keep a single spark to start a prairie fire.</strong>","socials":{"github":"https://github.com/Jerrylingj","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/2301_79143568?spm=1010.2135.3001.5343","juejin":"","customs":{}}}},{"title":"数学--欧拉函数","uid":"bb7fb6071a1bfe6c506396917992c585","slug":"数学-欧拉函数","date":"2024-10-06T16:00:08.000Z","updated":"2024-10-16T09:12:03.549Z","comments":true,"path":"api/articles/数学-欧拉函数.json","cover":"https://images.hdqwalls.com/wallpapers/anime-girl-grocery-shopping-i2.jpg","text":"欧拉函数 引入 定义为 中与 互质的数的个数 对 （分解质因数得) 结论 思路埃氏筛法欧拉筛法单个数的欧拉函数 更新 ","permalink":"/post/数学-欧拉函数","photos":[],"count_time":{"symbolsCount":65,"symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":19,"path":"api/categories/算法.json"}],"tags":[{"name":"数论","slug":"数论","count":4,"path":"api/tags/数论.json"},{"name":"欧拉函数","slug":"欧拉函数","count":1,"path":"api/tags/欧拉函数.json"}],"author":{"name":"Jerry","slug":"blog-author","avatar":"https://th.bing.com/th/id/R.7a1adf834060c41d2d476af2a5e322fd?rik=N35%2fqYx%2fr4RSog&riu=http%3a%2f%2fimg.keaiming.com%2fuploads%2fallimg%2f2020090111%2fsvaseyx4m3v.jpg&ehk=EBywhQ9emNaCt5dbn%2b%2fxbUc5yK42H8b%2ffRDsZKdVI6I%3d&risl=&pid=ImgRaw&r=0","link":"/","description":"<strong>Keep a single spark to start a prairie fire.</strong>","socials":{"github":"https://github.com/Jerrylingj","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/2301_79143568?spm=1010.2135.3001.5343","juejin":"","customs":{}}}},{"title":"动态规划--状态压缩DP","uid":"52c3d43467d5b3dc99c6cd71203838c1","slug":"动态规划-状态压缩DP","date":"2024-10-06T15:58:38.000Z","updated":"2024-10-08T07:36:13.595Z","comments":true,"path":"api/articles/动态规划-状态压缩DP.json","cover":"https://file.moyublog.com/free_wallpapers_files/kdxevforc0m.jpg","text":"状态压缩DP引入在某些问题中，状态数非常多，用暴力搜索的方法（复杂度 ）无法解决， 利用二进制数的思想，把每个状态用一个二进制数来表示，每一位的0/1代表某个点...","permalink":"/post/动态规划-状态压缩DP","photos":[],"count_time":{"symbolsCount":"13k","symbolsTime":"12 mins."},"categories":[{"name":"算法","slug":"算法","count":19,"path":"api/categories/算法.json"}],"tags":[{"name":"动态规划","slug":"动态规划","count":5,"path":"api/tags/动态规划.json"},{"name":"状态压缩DP","slug":"状态压缩DP","count":1,"path":"api/tags/状态压缩DP.json"},{"name":"lowbit","slug":"lowbit","count":2,"path":"api/tags/lowbit.json"}],"author":{"name":"Jerry","slug":"blog-author","avatar":"https://th.bing.com/th/id/R.7a1adf834060c41d2d476af2a5e322fd?rik=N35%2fqYx%2fr4RSog&riu=http%3a%2f%2fimg.keaiming.com%2fuploads%2fallimg%2f2020090111%2fsvaseyx4m3v.jpg&ehk=EBywhQ9emNaCt5dbn%2b%2fxbUc5yK42H8b%2ffRDsZKdVI6I%3d&risl=&pid=ImgRaw&r=0","link":"/","description":"<strong>Keep a single spark to start a prairie fire.</strong>","socials":{"github":"https://github.com/Jerrylingj","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/2301_79143568?spm=1010.2135.3001.5343","juejin":"","customs":{}}},"feature":true},{"title":"动态规划--树形DP","uid":"255c74842319a79aad2f8bcbbeafd0ea","slug":"动态规划-树形DP","date":"2024-10-06T15:58:28.000Z","updated":"2024-10-16T09:13:09.386Z","comments":true,"path":"api/articles/动态规划-树形DP.json","cover":"https://img.zcool.cn/community/01e3fd6034d23911013ef90fd4daa6.jpg@2o.jpg","text":"树形DP1.引入特点： 利用树的递归结构，通过dfs遍历定义和计算状态。 每个节点的状态通常表示以该节点为根的子树的最优解 考法：树的直径或最长路径 找到树任意...","permalink":"/post/动态规划-树形DP","photos":[],"count_time":{"symbolsCount":"6.3k","symbolsTime":"6 mins."},"categories":[{"name":"算法","slug":"算法","count":19,"path":"api/categories/算法.json"}],"tags":[{"name":"动态规划","slug":"动态规划","count":5,"path":"api/tags/动态规划.json"},{"name":"树形DP","slug":"树形DP","count":1,"path":"api/tags/树形DP.json"}],"author":{"name":"Jerry","slug":"blog-author","avatar":"https://th.bing.com/th/id/R.7a1adf834060c41d2d476af2a5e322fd?rik=N35%2fqYx%2fr4RSog&riu=http%3a%2f%2fimg.keaiming.com%2fuploads%2fallimg%2f2020090111%2fsvaseyx4m3v.jpg&ehk=EBywhQ9emNaCt5dbn%2b%2fxbUc5yK42H8b%2ffRDsZKdVI6I%3d&risl=&pid=ImgRaw&r=0","link":"/","description":"<strong>Keep a single spark to start a prairie fire.</strong>","socials":{"github":"https://github.com/Jerrylingj","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/2301_79143568?spm=1010.2135.3001.5343","juejin":"","customs":{}}},"feature":true},{"title":"数据结构与算法--week2","uid":"b1af6f6437b58f6d156f800c63cd3640","slug":"数据结构与算法-week2","date":"2024-10-05T11:16:27.000Z","updated":"2024-10-06T05:35:02.180Z","comments":true,"path":"api/articles/数据结构与算法-week2.json","cover":"https://img.freepik.com/premium-photo/captivating-anime-world-with-post-apocalyptic-city-wallpaper_916191-69107.jpg","text":"1.链表反转 题目 题目描述： 下面所给的是链表节点的结构，你的任务是写一个函数将链表反转。 12345678910struct ListNode { int ...","permalink":"/post/数据结构与算法-week2","photos":[],"count_time":{"symbolsCount":"5.2k","symbolsTime":"5 mins."},"categories":[{"name":"算法","slug":"算法","count":19,"path":"api/categories/算法.json"}],"tags":[{"name":"字符串","slug":"字符串","count":2,"path":"api/tags/字符串.json"},{"name":"链表","slug":"链表","count":2,"path":"api/tags/链表.json"},{"name":"队列","slug":"队列","count":3,"path":"api/tags/队列.json"},{"name":"贪心","slug":"贪心","count":1,"path":"api/tags/贪心.json"},{"name":"dfs","slug":"dfs","count":1,"path":"api/tags/dfs.json"}],"author":{"name":"Jerry","slug":"blog-author","avatar":"https://th.bing.com/th/id/R.7a1adf834060c41d2d476af2a5e322fd?rik=N35%2fqYx%2fr4RSog&riu=http%3a%2f%2fimg.keaiming.com%2fuploads%2fallimg%2f2020090111%2fsvaseyx4m3v.jpg&ehk=EBywhQ9emNaCt5dbn%2b%2fxbUc5yK42H8b%2ffRDsZKdVI6I%3d&risl=&pid=ImgRaw&r=0","link":"/","description":"<strong>Keep a single spark to start a prairie fire.</strong>","socials":{"github":"https://github.com/Jerrylingj","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/2301_79143568?spm=1010.2135.3001.5343","juejin":"","customs":{}}}},{"title":"动态规划--区间DP","uid":"e9c911dbfeb3b82e631b7a70a15f2cf2","slug":"动态规划-区间DP","date":"2024-09-26T05:12:32.000Z","updated":"2024-10-05T04:22:57.583Z","comments":true,"path":"api/articles/动态规划-区间DP.json","cover":"https://img.freepik.com/premium-photo/beautiful-young-brunette-girl-sitting-drink-shop-bench-staring-blankly-out-window_1417-26814.jpg","text":"区间DP引入区间DP主要用于解决涉及区间分割与合并的动态规划问题。 在这类问题中，我们往往会关注一段区间上的某种性质（方案数、组合数、最大值……） 而区间DP的...","permalink":"/post/动态规划-区间DP","photos":[],"count_time":{"symbolsCount":"5.6k","symbolsTime":"5 mins."},"categories":[{"name":"算法","slug":"算法","count":19,"path":"api/categories/算法.json"}],"tags":[{"name":"动态规划","slug":"动态规划","count":5,"path":"api/tags/动态规划.json"},{"name":"区间DP","slug":"区间DP","count":1,"path":"api/tags/区间DP.json"}],"author":{"name":"Jerry","slug":"blog-author","avatar":"https://th.bing.com/th/id/R.7a1adf834060c41d2d476af2a5e322fd?rik=N35%2fqYx%2fr4RSog&riu=http%3a%2f%2fimg.keaiming.com%2fuploads%2fallimg%2f2020090111%2fsvaseyx4m3v.jpg&ehk=EBywhQ9emNaCt5dbn%2b%2fxbUc5yK42H8b%2ffRDsZKdVI6I%3d&risl=&pid=ImgRaw&r=0","link":"/","description":"<strong>Keep a single spark to start a prairie fire.</strong>","socials":{"github":"https://github.com/Jerrylingj","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/2301_79143568?spm=1010.2135.3001.5343","juejin":"","customs":{}}}},{"title":"动态规划--线性DP","uid":"62555a6f14b066c1f526e128e3c72f4d","slug":"动态规划-线性DP","date":"2024-09-26T05:12:20.000Z","updated":"2024-10-16T09:12:58.061Z","comments":true,"path":"api/articles/动态规划-线性DP.json","cover":"https://th.bing.com/th/id/R.cfeca59da89670ffef418953dae13013?rik=QkuMQsWQQNR%2baQ&riu=http%3a%2f%2fqqpublic.qpic.cn%2fqq_public%2f0%2f0-2978607536-CFECA59DA89670FFEF418953DAE13013%2f0%3ffmt%3djpg%26size%3d175%26h%3d506%26w%3d900%26ppv%3d1.jpg&ehk=8cHOjja6x62722GWhBoqCV5yxl9HO1pmuTZJWi1z9vY%3d&risl=&pid=ImgRaw&r=0","text":"线性DP引入线性DP就是指状态的转移具有线性递推关系，每个状态只依赖之前的状态，按照线性顺序一步步递推下去。 正如之前在背包问题中所写到的，仍旧可以用状态表示和...","permalink":"/post/动态规划-线性DP","photos":[],"count_time":{"symbolsCount":"6.4k","symbolsTime":"6 mins."},"categories":[{"name":"算法","slug":"算法","count":19,"path":"api/categories/算法.json"}],"tags":[{"name":"动态规划","slug":"动态规划","count":5,"path":"api/tags/动态规划.json"},{"name":"线性DP","slug":"线性DP","count":1,"path":"api/tags/线性DP.json"}],"author":{"name":"Jerry","slug":"blog-author","avatar":"https://th.bing.com/th/id/R.7a1adf834060c41d2d476af2a5e322fd?rik=N35%2fqYx%2fr4RSog&riu=http%3a%2f%2fimg.keaiming.com%2fuploads%2fallimg%2f2020090111%2fsvaseyx4m3v.jpg&ehk=EBywhQ9emNaCt5dbn%2b%2fxbUc5yK42H8b%2ffRDsZKdVI6I%3d&risl=&pid=ImgRaw&r=0","link":"/","description":"<strong>Keep a single spark to start a prairie fire.</strong>","socials":{"github":"https://github.com/Jerrylingj","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/2301_79143568?spm=1010.2135.3001.5343","juejin":"","customs":{}}}},{"title":"动态规划--背包问题","uid":"398687178e2ec3c1a9498d5422c75757","slug":"动态规划-背包问题","date":"2024-09-26T05:12:09.000Z","updated":"2024-10-16T14:19:10.575Z","comments":true,"path":"api/articles/动态规划-背包问题.json","cover":"https://th.bing.com/th/id/R.45220ae8c60a277f746e75ff04ac119c?rik=rPdo6E7rtgZdgg&riu=http%3a%2f%2fimgs.aixifan.com%2flive%2f1483601994468%2f1483601994468.jpg&ehk=uZrP3Dy6rbH%2b1eBk9HChyF3X8Ebx9R7RPOzlgYNw5sI%3d&risl=&pid=ImgRaw&r=0","text":"🎮 背包问题欢迎来到 动态规划的冒险世界！在这趟旅途中，你将化身为一位勇敢的冒险者，面临一个经典而深邃的挑战：如何在有限的资源下获得最大的收益。每一关都充满了挑...","permalink":"/post/动态规划-背包问题","photos":[],"count_time":{"symbolsCount":"6.9k","symbolsTime":"6 mins."},"categories":[{"name":"算法","slug":"算法","count":19,"path":"api/categories/算法.json"}],"tags":[{"name":"动态规划","slug":"动态规划","count":5,"path":"api/tags/动态规划.json"},{"name":"背包问题","slug":"背包问题","count":1,"path":"api/tags/背包问题.json"}],"author":{"name":"Jerry","slug":"blog-author","avatar":"https://th.bing.com/th/id/R.7a1adf834060c41d2d476af2a5e322fd?rik=N35%2fqYx%2fr4RSog&riu=http%3a%2f%2fimg.keaiming.com%2fuploads%2fallimg%2f2020090111%2fsvaseyx4m3v.jpg&ehk=EBywhQ9emNaCt5dbn%2b%2fxbUc5yK42H8b%2ffRDsZKdVI6I%3d&risl=&pid=ImgRaw&r=0","link":"/","description":"<strong>Keep a single spark to start a prairie fire.</strong>","socials":{"github":"https://github.com/Jerrylingj","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/2301_79143568?spm=1010.2135.3001.5343","juejin":"","customs":{}}}},{"title":"博弈论--NIM游戏","uid":"c3878449dce899402d13b06cc735de00","slug":"博弈论-NIM游戏","date":"2024-09-26T05:11:45.000Z","updated":"2024-10-16T14:16:25.743Z","comments":true,"path":"api/articles/博弈论-NIM游戏.json","cover":"https://wallpaperm.cmcm.com/b26f4834677e2f0c2cedbd24788b4362.jpg","text":"引入先介绍几个概念 1.公平组合游戏ICG： 两名玩家交替行动 在任意时刻，可执行的行动与玩家本身无关（游戏公平性） 不能行动的玩家输 2.有向图游戏 给定一个...","permalink":"/post/博弈论-NIM游戏","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":19,"path":"api/categories/算法.json"}],"tags":[{"name":"博弈论","slug":"博弈论","count":1,"path":"api/tags/博弈论.json"},{"name":"NIM游戏","slug":"NIM游戏","count":1,"path":"api/tags/NIM游戏.json"},{"name":"SG函数","slug":"SG函数","count":1,"path":"api/tags/SG函数.json"}],"author":{"name":"Jerry","slug":"blog-author","avatar":"https://th.bing.com/th/id/R.7a1adf834060c41d2d476af2a5e322fd?rik=N35%2fqYx%2fr4RSog&riu=http%3a%2f%2fimg.keaiming.com%2fuploads%2fallimg%2f2020090111%2fsvaseyx4m3v.jpg&ehk=EBywhQ9emNaCt5dbn%2b%2fxbUc5yK42H8b%2ffRDsZKdVI6I%3d&risl=&pid=ImgRaw&r=0","link":"/","description":"<strong>Keep a single spark to start a prairie fire.</strong>","socials":{"github":"https://github.com/Jerrylingj","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/2301_79143568?spm=1010.2135.3001.5343","juejin":"","customs":{}}}},{"title":"快速幂","uid":"9fc7aaa29955e8777b63cdc5e2f3c111","slug":"快速幂","date":"2024-09-26T05:11:31.000Z","updated":"2024-10-05T05:53:18.149Z","comments":true,"path":"api/articles/快速幂.json","cover":"https://th.bing.com/th/id/R.40ed8754bd0b022923b42ebdc50d62fe?rik=CEK%2bT%2f1%2b5XmngQ&pid=ImgRaw&r=0","text":"快速幂快速计算 朴素计算 显然当过大时太慢了 快速幂计算 思路 即二进制 所以 而每次往后只需把平方一下就行 代码123456789101112131415//...","permalink":"/post/快速幂","photos":[],"count_time":{"symbolsCount":463,"symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":19,"path":"api/categories/算法.json"}],"tags":[{"name":"快速幂","slug":"快速幂","count":1,"path":"api/tags/快速幂.json"},{"name":"数论","slug":"数论","count":4,"path":"api/tags/数论.json"}],"author":{"name":"Jerry","slug":"blog-author","avatar":"https://th.bing.com/th/id/R.7a1adf834060c41d2d476af2a5e322fd?rik=N35%2fqYx%2fr4RSog&riu=http%3a%2f%2fimg.keaiming.com%2fuploads%2fallimg%2f2020090111%2fsvaseyx4m3v.jpg&ehk=EBywhQ9emNaCt5dbn%2b%2fxbUc5yK42H8b%2ffRDsZKdVI6I%3d&risl=&pid=ImgRaw&r=0","link":"/","description":"<strong>Keep a single spark to start a prairie fire.</strong>","socials":{"github":"https://github.com/Jerrylingj","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/2301_79143568?spm=1010.2135.3001.5343","juejin":"","customs":{}}}},{"title":"数学--约数","uid":"40241814551b223b651e15683e69d116","slug":"数学-约数","date":"2024-09-26T05:10:57.000Z","updated":"2024-10-16T07:36:18.221Z","comments":true,"path":"api/articles/数学-约数.json","cover":"https://th.bing.com/th/id/R.a0123ab1e32b53695e8e38f57b6f8e82?rik=TnC7RxdEWsug6Q&pid=ImgRaw&r=0","text":"约数1.求约数试除法求所有约数 枚举 对 存 代码： 123456789101112vector<int> get_divisors(int x){ vecto...","permalink":"/post/数学-约数","photos":[],"count_time":{"symbolsCount":515,"symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":19,"path":"api/categories/算法.json"}],"tags":[{"name":"数论","slug":"数论","count":4,"path":"api/tags/数论.json"},{"name":"约数","slug":"约数","count":1,"path":"api/tags/约数.json"}],"author":{"name":"Jerry","slug":"blog-author","avatar":"https://th.bing.com/th/id/R.7a1adf834060c41d2d476af2a5e322fd?rik=N35%2fqYx%2fr4RSog&riu=http%3a%2f%2fimg.keaiming.com%2fuploads%2fallimg%2f2020090111%2fsvaseyx4m3v.jpg&ehk=EBywhQ9emNaCt5dbn%2b%2fxbUc5yK42H8b%2ffRDsZKdVI6I%3d&risl=&pid=ImgRaw&r=0","link":"/","description":"<strong>Keep a single spark to start a prairie fire.</strong>","socials":{"github":"https://github.com/Jerrylingj","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/2301_79143568?spm=1010.2135.3001.5343","juejin":"","customs":{}}}},{"title":"数学--质数","uid":"6390ac85391cd221383c57783115e1e4","slug":"数学-质数","date":"2024-09-26T05:10:48.000Z","updated":"2024-10-16T14:20:21.771Z","comments":true,"path":"api/articles/数学-质数.json","cover":"https://ts1.cn.mm.bing.net/th/id/R-C.dee7eeb72e0a34b54d8177152f7a5428?rik=sPmtIvirSP%2fHEQ&pid=ImgRaw&r=0","text":"质数 >1 只包含1和本身两个约数 1.判断质数试除法，只需枚举即可 代码： 12345678bool is_prime(int n){ if (n < 2) ...","permalink":"/post/数学-质数","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":19,"path":"api/categories/算法.json"}],"tags":[{"name":"数论","slug":"数论","count":4,"path":"api/tags/数论.json"},{"name":"质数","slug":"质数","count":1,"path":"api/tags/质数.json"}],"author":{"name":"Jerry","slug":"blog-author","avatar":"https://th.bing.com/th/id/R.7a1adf834060c41d2d476af2a5e322fd?rik=N35%2fqYx%2fr4RSog&riu=http%3a%2f%2fimg.keaiming.com%2fuploads%2fallimg%2f2020090111%2fsvaseyx4m3v.jpg&ehk=EBywhQ9emNaCt5dbn%2b%2fxbUc5yK42H8b%2ffRDsZKdVI6I%3d&risl=&pid=ImgRaw&r=0","link":"/","description":"<strong>Keep a single spark to start a prairie fire.</strong>","socials":{"github":"https://github.com/Jerrylingj","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/2301_79143568?spm=1010.2135.3001.5343","juejin":"","customs":{}}}},{"title":"图论--最短路","uid":"23e5ccb93b471aba058840eff980504f","slug":"图论-最短路","date":"2024-09-26T05:09:40.000Z","updated":"2024-10-05T07:07:40.475Z","comments":true,"path":"api/articles/图论-最短路.json","cover":"https://img-baofun.zhhainiao.com/fs/42b96f61725b117579cf55204505a432.jpg","text":"最短路先贴张总体图： 最短路问题有以下性质： 对于边权为正的图，任意两个结点之间的最短路，不会经过重复的结点。 对于边权为正的图，任意两个结点之间的最短路，不会...","permalink":"/post/图论-最短路","photos":[],"count_time":{"symbolsCount":"9.7k","symbolsTime":"9 mins."},"categories":[{"name":"算法","slug":"算法","count":19,"path":"api/categories/算法.json"}],"tags":[{"name":"最短路","slug":"最短路","count":1,"path":"api/tags/最短路.json"},{"name":"图论","slug":"图论","count":1,"path":"api/tags/图论.json"},{"name":"Dijkstra","slug":"Dijkstra","count":1,"path":"api/tags/Dijkstra.json"},{"name":"SPFA","slug":"SPFA","count":1,"path":"api/tags/SPFA.json"},{"name":"Bellman-Ford","slug":"Bellman-Ford","count":1,"path":"api/tags/Bellman-Ford.json"},{"name":"Floyd","slug":"Floyd","count":1,"path":"api/tags/Floyd.json"}],"author":{"name":"Jerry","slug":"blog-author","avatar":"https://th.bing.com/th/id/R.7a1adf834060c41d2d476af2a5e322fd?rik=N35%2fqYx%2fr4RSog&riu=http%3a%2f%2fimg.keaiming.com%2fuploads%2fallimg%2f2020090111%2fsvaseyx4m3v.jpg&ehk=EBywhQ9emNaCt5dbn%2b%2fxbUc5yK42H8b%2ffRDsZKdVI6I%3d&risl=&pid=ImgRaw&r=0","link":"/","description":"<strong>Keep a single spark to start a prairie fire.</strong>","socials":{"github":"https://github.com/Jerrylingj","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/2301_79143568?spm=1010.2135.3001.5343","juejin":"","customs":{}}}},{"title":"二分","uid":"8038215b5c2b5aa82664c7d7c50d2cdc","slug":"二分","date":"2024-09-26T02:50:13.000Z","updated":"2024-10-16T14:19:42.345Z","comments":true,"path":"api/articles/二分.json","cover":"https://n.sinaimg.cn/sinacn10112/181/w1550h1031/20191218/3315-ikvenft9359266.jpg","text":"二分 注意 ❗❗❗❗二分查找的前提是被查找的数据必须有二段性 如何理解这句话呢？ 举个例子，在数组[1, 5 , 8, 9, 23, 25, 40]里找9 我可...","permalink":"/post/二分","photos":[],"count_time":{"symbolsCount":"5.1k","symbolsTime":"5 mins."},"categories":[{"name":"算法","slug":"算法","count":19,"path":"api/categories/算法.json"}],"tags":[{"name":"基础算法","slug":"基础算法","count":4,"path":"api/tags/基础算法.json"},{"name":"二分","slug":"二分","count":1,"path":"api/tags/二分.json"}],"author":{"name":"Jerry","slug":"blog-author","avatar":"https://th.bing.com/th/id/R.7a1adf834060c41d2d476af2a5e322fd?rik=N35%2fqYx%2fr4RSog&riu=http%3a%2f%2fimg.keaiming.com%2fuploads%2fallimg%2f2020090111%2fsvaseyx4m3v.jpg&ehk=EBywhQ9emNaCt5dbn%2b%2fxbUc5yK42H8b%2ffRDsZKdVI6I%3d&risl=&pid=ImgRaw&r=0","link":"/","description":"<strong>Keep a single spark to start a prairie fire.</strong>","socials":{"github":"https://github.com/Jerrylingj","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/2301_79143568?spm=1010.2135.3001.5343","juejin":"","customs":{}}}},{"title":"排序","uid":"2a1893ca085cc0c5b7d1cdcd8c0b1c91","slug":"排序","date":"2024-09-26T02:05:17.000Z","updated":"2024-10-16T14:20:03.526Z","comments":true,"path":"api/articles/排序.json","cover":"https://th.bing.com/th/id/R.ec013c54a665bb6b38fb0390e2987b80?rik=3OfrTtHdScARiQ&riu=http%3a%2f%2fqqpublic.qpic.cn%2fqq_public%2f0%2f0-595029769-EC013C54A665BB6B38FB0390E2987B80%2f0%3ffmt%3djpg%26size%3d101%26h%3d506%26w%3d900%26ppv%3d1.jpg&ehk=YrecwkKXnI1%2b2ARpQFDbvv%2bjFB66bRmEzr9q134unNk%3d&risl=&pid=ImgRaw&r=0","text":"1.快速排序对数组 q 在下标 l 到 r 的范围内进行升序排序。 快速排序通过多次的比较和交换，在一趟排序之中确定好选择的基准应该在的位置。这个位置满足的条件...","permalink":"/post/排序","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"算法","slug":"算法","count":19,"path":"api/categories/算法.json"}],"tags":[{"name":"基础算法","slug":"基础算法","count":4,"path":"api/tags/基础算法.json"},{"name":"快速排序","slug":"快速排序","count":1,"path":"api/tags/快速排序.json"},{"name":"归并排序","slug":"归并排序","count":1,"path":"api/tags/归并排序.json"}],"author":{"name":"Jerry","slug":"blog-author","avatar":"https://th.bing.com/th/id/R.7a1adf834060c41d2d476af2a5e322fd?rik=N35%2fqYx%2fr4RSog&riu=http%3a%2f%2fimg.keaiming.com%2fuploads%2fallimg%2f2020090111%2fsvaseyx4m3v.jpg&ehk=EBywhQ9emNaCt5dbn%2b%2fxbUc5yK42H8b%2ffRDsZKdVI6I%3d&risl=&pid=ImgRaw&r=0","link":"/","description":"<strong>Keep a single spark to start a prairie fire.</strong>","socials":{"github":"https://github.com/Jerrylingj","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/2301_79143568?spm=1010.2135.3001.5343","juejin":"","customs":{}}}}]}